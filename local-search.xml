<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo博客搭建流程</title>
    <link href="/posts/6d384a56/"/>
    <url>/posts/6d384a56/</url>
    
    <content type="html"><![CDATA[<p>本文主要记录自己搭建Hexo博客的流程，主要包括搭建Hexo博客、插件安装和主题美化。</p><span id="more"></span><blockquote><p>步骤1-5主要为搭建Hexo博客，主要参考了知乎文章<a href="https://zhuanlan.zhihu.com/p/102592286">从零开始搭建个人博客（超详细）</a>，这里就不在赘述，只做补充。</p></blockquote><h1 id="1-注册GitHub"><a href="#1-注册GitHub" class="headerlink" title="1. 注册GitHub"></a>1. 注册GitHub</h1><p><a href="https://github.com/">https://github.com/</a></p><h1 id="2-安装Git"><a href="#2-安装Git" class="headerlink" title="2. 安装Git"></a>2. 安装Git</h1><p><a href="https://git-scm.com/download">https://git-scm.com/download</a></p><p><a href="https://blog.csdn.net/qq_41521682/article/details/122764915">Git下载与安装-CSDN博客</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git --version  <span class="hljs-comment"># 查看 Git 版本</span><br></code></pre></td></tr></table></figure><h1 id="3-绑定GitHub并提交文件"><a href="#3-绑定GitHub并提交文件" class="headerlink" title="3. 绑定GitHub并提交文件"></a>3. 绑定GitHub并提交文件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push -u origin main<br><span class="hljs-comment"># or</span><br>git push -u origin master<br></code></pre></td></tr></table></figure><h1 id="4-安装node-js和Hexo"><a href="#4-安装node-js和Hexo" class="headerlink" title="4. 安装node.js和Hexo"></a>4. 安装node.js和Hexo</h1><h2 id="报错处理"><a href="#报错处理" class="headerlink" title="报错处理"></a>报错处理</h2><ol><li><p>注意在建立两个文件夹<code>node_global</code>与<code>node_cache</code>时，需要右键设置<code>“属性”</code>，将用户具有完全属性的权限，否则在<code>npm install webpack</code>时会报错。</p><p>感谢大佬！！！，其实直接以管理员身份运行<code>cmd</code>就行了。</p></li><li></li></ol><h1 id="5-解析域名"><a href="#5-解析域名" class="headerlink" title="5. 解析域名"></a>5. 解析域名</h1><ol><li><p>ping出来地址是ipv6。ping ipv4的方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ping github.io -4<br></code></pre></td></tr></table></figure></li><li><p>Hexo部署过程中可能会出现错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">fatal: unable to access <span class="hljs-string">&#x27;https://github.com/a956551943/a956551943.github.io/&#x27;</span>: Encountered end of file<br>FATAL &#123;<br>  err: Error: Spawn failed<br>      at ChildProcess.&lt;anonymous&gt; (/usr/local/src/hexo/hanyubolg/node_modules/hexo-util/lib/spawn.js:51:21)<br>      at ChildProcess.emit (events.js:376:20)<br>      at Process.ChildProcess._handle.onexit (internal/child_process.js:277:12) &#123;<br>    code: 128<br>  &#125;<br>&#125; Something<span class="hljs-string">&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html</span><br></code></pre></td></tr></table></figure><p>解决方式一：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##进入站点根目录</span><br><span class="hljs-built_in">cd</span> /usr/local/src/hexo/hanyubolg/<br><br><span class="hljs-comment">##删除git提交内容文件夹</span><br><span class="hljs-built_in">rm</span> -rf .deploy_git/<br><br><span class="hljs-comment">##执行</span><br>git config --global core.autocrlf <span class="hljs-literal">false</span><br><br><span class="hljs-comment">##最后</span><br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br><br></code></pre></td></tr></table></figure><p>解决方式二：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##进入站点根目录</span><br><span class="hljs-built_in">cd</span> /usr/local/src/hexo/hanyubolg/<br><br><span class="hljs-comment">##删除git提交内容文件夹</span><br>vim _config.yml<br><br><span class="hljs-comment">##修改</span><br>deploy:<br><br><span class="hljs-built_in">type</span>: git<br><br>repo: https://github.com/yourname/yourname.github.io.git<br><span class="hljs-comment"># 改为</span><br><span class="hljs-comment"># GitHub项目主页，点击绿色的Code，SSH</span><br>repo: git@github.com:a956551943/weixiaohui.github.io.git<br><br>branch: master<br><br><span class="hljs-comment">##最后</span><br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br><br></code></pre></td></tr></table></figure><p>解决方式三：不建议</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">##进入站点根目录</span><br><span class="hljs-built_in">cd</span> /usr/local/src/hexo/hanyubolg/<br><br><span class="hljs-comment">##进入depoly文件夹</span><br><span class="hljs-built_in">cd</span> .deploy_git/<br><br><span class="hljs-comment">##强制推送</span><br>git push -f<br></code></pre></td></tr></table></figure></li><li></li></ol><h1 id="6-Hexo基本技巧"><a href="#6-Hexo基本技巧" class="headerlink" title="6. Hexo基本技巧"></a>6. Hexo基本技巧</h1><p>捋一遍<a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a>就基本可以了。</p><h1 id="7-设置主题和主题美化"><a href="#7-设置主题和主题美化" class="headerlink" title="7. 设置主题和主题美化"></a>7. 设置主题和主题美化</h1><p>实现步骤：</p><ol><li><p>在<a href="https://github.com/">GitHub</a>上搜索<code>Hexo</code>寻找自己喜欢的Hexo主题。我最终选择了<a href="https://hexo.fluid-dev.com/docs/">Hexo Fluid</a>主题。一款很成熟的主题，简洁大方，有官方中文教程。</p></li><li><p><a href="https://hexo.fluid-dev.com/docs/start/">安装Hexo Fluid主题</a>。</p></li><li><p><a href="https://zeyulong.com/posts/7b14eacc/">安装Hexo博客插件</a>。</p></li><li><p><a href="https://zeyulong.com/posts/3edad46f/">主题美化</a>。</p></li></ol><p>解决的一些问题：</p><ol><li><a href="https://zeyulong.com/posts/437b0d10/">Hexo博客解决插入图片的路径问题</a>。</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ChatGPT的使用技巧</title>
    <link href="/posts/b0e52d60/"/>
    <url>/posts/b0e52d60/</url>
    
    <content type="html"><![CDATA[<p>总结整理了网上分享的ChatGPT的使用技巧，尽可能做到物尽其用，在使用ChatGPT时充分发挥出其优势和性能，以更好地解决问题。</p><span id="more"></span><h1 id="哈哈"><a href="#哈哈" class="headerlink" title="哈哈"></a>哈哈</h1><h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1><h2 id="test1"><a href="#test1" class="headerlink" title="test1"></a>test1</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客插件推荐</title>
    <link href="/posts/7b14eacc/"/>
    <url>/posts/7b14eacc/</url>
    
    <content type="html"><![CDATA[<p>本人使用的<a href="https://hexo.fluid-dev.com/docs/">Hexo Fluid</a>主题应该是内置支持了很多插件，不再需要单独安装。所以，本文只推荐一些本人额外安装的一些插件。</p><span id="more"></span><h1 id="hexo-asset-img"><a href="#hexo-asset-img" class="headerlink" title="hexo-asset-img"></a>hexo-asset-img</h1><h2 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>因为Hexo的语法和路径要求导致的，在本地和Hexo博客上不能同时加载出图片。</p><h2 id="安装配置流程"><a href="#安装配置流程" class="headerlink" title="安装配置流程"></a>安装配置流程</h2><p><a href="https://zeyulong.com/posts/437b0d10/">Hexo博客解决插入图片的路径问题 </a>。</p><h1 id="hexo-abbrlink"><a href="#hexo-abbrlink" class="headerlink" title="hexo-abbrlink"></a>hexo-abbrlink</h1><p><a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a>: 通过 Hex 算法生成永久的文章链接。</p><h2 id="存在的问题-1"><a href="#存在的问题-1" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>Hexo文章链接默认的生成规则是<code>:year/:month/:day/:title</code>，即按照年、月、日、标题的顺序。当文件名为中文时，会导致 url 链接中也出现中文。这样的链接非常不利于阅读，也不美观。更重要的是，太复杂的网址不利于被搜索引擎检索推荐到。因此，选择使用<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a>插件为文章生成更加简洁方便的永久链接。</p><h2 id="安装配置流程-1"><a href="#安装配置流程-1" class="headerlink" title="安装配置流程"></a>安装配置流程</h2><ol><li><p>安装<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a>插件</p><p>在<code>./Blog/</code>即博客根目录下打开<code>Git Bash</code>，输入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-abbrlink --save<br></code></pre></td></tr></table></figure></li><li><p>修改<code>./Blog/</code>目录下的站点配置文件<code>_config.yml</code>：</p><ol><li><p>将：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">permalink:</span> <span class="hljs-string">:year/:month/:day/:title/</span><br></code></pre></td></tr></table></figure><p>使用<code>#</code>注释掉，替换为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># permalink: :year/:month/:day/:title/</span><br><span class="hljs-attr">permalink:</span> <span class="hljs-string">posts/:abbrlink/</span><br><span class="hljs-comment"># or</span><br><span class="hljs-attr">permalink:</span> <span class="hljs-string">posts/:abbrlink.html</span><br></code></pre></td></tr></table></figure><blockquote><p>网址以<code>/</code>结尾和以<code>.html</code>结尾的区别：</p><ol><li>单从链接属性来说，<code>/</code>结尾的链接是目录形式，<code>.html</code>结尾的链接是文章页面形式。</li><li>对SEO（按照搜索引擎的算法，提升你的文章在搜索引擎中的自然排名）来说，影响不大。</li></ol></blockquote></li><li><p>另外，可以添加的配置选项包括：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># abbrlink config</span><br><span class="hljs-attr">abbrlink:</span><br>  <span class="hljs-attr">alg:</span> <span class="hljs-string">crc32</span>      <span class="hljs-comment">#support crc16(default) and crc32</span><br>  <span class="hljs-attr">rep:</span> <span class="hljs-string">hex</span>        <span class="hljs-comment">#support dec(default) and hex</span><br>  <span class="hljs-attr">drafts:</span> <span class="hljs-literal">false</span>   <span class="hljs-comment">#(true)Process draft,(false)Do not process draft. false(default) </span><br>  <span class="hljs-comment"># Generate categories from directory-tree</span><br>  <span class="hljs-comment"># depth: the max_depth of directory-tree you want to generate, should &gt; 0</span><br>  <span class="hljs-attr">auto_category:</span><br>     <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>  <span class="hljs-comment">#true(default)</span><br>     <span class="hljs-attr">depth:</span>        <span class="hljs-comment">#3(default)</span><br>     <span class="hljs-attr">over_write:</span> <span class="hljs-literal">false</span> <br>  <span class="hljs-attr">auto_title:</span> <span class="hljs-literal">false</span> <span class="hljs-comment">#enable auto title, it can auto fill the title by path</span><br>  <span class="hljs-attr">auto_date:</span> <span class="hljs-literal">false</span> <span class="hljs-comment">#enable auto date, it can auto fill the date by time today</span><br>  <span class="hljs-attr">force:</span> <span class="hljs-literal">false</span> <span class="hljs-comment">#enable force mode,in this mode, the plugin will ignore the cache, and calc the abbrlink for every post even it already had abbrlink. This only updates abbrlink rather than other front variables.</span><br></code></pre></td></tr></table></figure><p>其中，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a>插件支持 16 位、32 位以及十进制，十六进制共 4 种不同的模式，你可以按照需求选择。生成链接的样式：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># crc16 &amp; hex</span><br><span class="hljs-string">https://post.zz173.com/posts/66c8.html</span><br><span class="hljs-comment"># crc16 &amp; dec</span><br><span class="hljs-string">https://post.zz173.com/posts/65535.html</span><br><span class="hljs-comment"># crc32 &amp; hex</span><br><span class="hljs-string">https://post.zz173.com/posts/8ddf18fb.html</span><br><span class="hljs-comment"># crc32 &amp; dec</span><br><span class="hljs-string">https://post.zz173.com/posts/1690090958.html</span><br></code></pre></td></tr></table></figure></li><li></li></ol></li><li><p>在部署博客后，可以发现<code>./Blog/source/_posts</code>目录下的<code>.md</code>博客文档开头的<a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a>中多了一项<code>abbrlink: xxx</code>。其中，<code>xxx</code>就是你博客文章对应的永久链接了，例如：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-string">https://post.zz173.com/posts/xxx/</span><br></code></pre></td></tr></table></figure><p>可以通过修改这里的<code>abbrlink: xxx</code>来修改链接？（暂未尝试）</p></li><li></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客解决插入图片的路径问题</title>
    <link href="/posts/437b0d10/"/>
    <url>/posts/437b0d10/</url>
    
    <content type="html"><![CDATA[<p>本文主要解决因为Hexo的语法和路径要求导致的，在本地和Hexo博客上不能同时加载出图片的问题。</p><span id="more"></span><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>在本地使用Typora写Markdown文档时，设置了Typora会自动在文档的根目录下新建<code>./$&#123;filename&#125;</code>文件夹，从而可以方便地使用相对路径在文档中插入图片。例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># 文件路径</span><br>hexo-typora<br>├── apppicker.jpg<br>├── logo.png<br>└── rules.jpg<br>hexo-typora.md<br></code></pre></td></tr></table></figure><img src="/posts/437b0d10/%E5%9B%BE1-Markdown%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E7%9A%84%E8%AF%AD%E6%B3%95.png" class="" title="图1-Markdown插入图片的语法"><p>（这里图1举例的引用格式为什么使用了图片，而没有直接打出，后面进行说明）</p><p>这种将Markdown文档和资源（图片）文件夹放在同一目录下的做法可以方便管理和打包。</p><p>在使用Hexo写博客时，虽然可以通过将 <code>config.yml</code> 文件中的 <code>post_asset_folder</code> 选项设为 <code>true</code> 打开来实现通过 <code>hexo new [layout] &lt;title&gt;</code> 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个文章文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们。但是，依旧在Markdown文档使用<strong>图1所示的Markdown插入图片的语法</strong>却不能在博客中正确的加载出图片（本地加载是没有问题的）。</p><p>同样的，如果直接在本地使用HTML语法来插入图片，本地可以加载，博客不能加载出来。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./hexo-typora/logo.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;logo&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>经测试，可以使用<a href="https://hexo.io/zh-cn/docs/tag-plugins#%E5%BC%95%E7%94%A8%E8%B5%84%E6%BA%90">标签插件</a>来使博客中加载出图片。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% asset<span class="hljs-emphasis">_img logo.png logo %&#125;</span><br></code></pre></td></tr></table></figure><p>但是，这样的话，本地就加载不出图片了。两者不可兼得。如果在一篇Markdown文档同时使用<strong>图1所示的Markdown插入图片的语法</strong>和<code>&#123;% asset_img logo.png logo %&#125;</code>来引用同一张图片，那么在本地和博客上都会多出一条无效（占空）的语句，影响观感，不喜欢。</p><p>我使用的是<a href="https://hexo.fluid-dev.com/docs/">Hexo Fluid</a>主题，究其原因，在<a href="https://hexo.fluid-dev.com/docs/guide/#%E6%96%87%E7%AB%A0%E5%9C%A8%E9%A6%96%E9%A1%B5%E7%9A%84%E5%B0%81%E9%9D%A2%E5%9B%BE">配置指南|Hexo Fluid 用户手册</a>中提到，图片需要存放在<code>.\Blog\node_modules\hexo-theme-fluid\source\</code>目录及其子目录下才能正确引用。那这样的就不能使用相对路径了，不方便管理，麻烦，需要寻找更好的解决办法。</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>在网上找到了一篇博主的博客<a href="https://moeci.com/posts/hexo-typora/">Hexo + Typora + 开发Hexo插件 解决图片路径不一致 | yiyun’s Blog</a>，前期准备和实现原理部分这里就不再赘述，可以阅读一下，加深对实现方法的理解，方便后面对相似的问题举一反三。</p><p>根据博主GitHub仓库<a href="https://github.com/yiyungent/hexo-asset-img">yiyungent&#x2F;hexo-asset-img</a>的说明，通过在<code>.\Blog\</code>根目录鼠标右键打开<code>Git Bash</code>，输入以下命令可以安装<code>hexo-asset-img</code>插件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-asset-img --save<br><span class="hljs-comment"># or, Latest Dev</span><br>npm install git://github.com/yiyungent/hexo-asset-img.git<span class="hljs-comment">#main</span><br></code></pre></td></tr></table></figure><p>再次测试，发现博客还是加载不出图片。究其原因，是博主的<code>hexo-asset-img</code>插件能够将下图（图2）所示的Markdown插入图片的语法在文章编译为html之前，</p><img src="/posts/437b0d10/%E5%9B%BE2-Markdown%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E7%9A%84%E8%AF%AD%E6%B3%95%EF%BC%88%E6%97%A0%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E7%AC%A6%E5%8F%B7%EF%BC%89.png" class="" title="图2-Markdown插入图片的语法（无相对路径符号）">在编译过程中转换为标签：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% asset<span class="hljs-emphasis">_img logo.png logo %&#125;</span><br></code></pre></td></tr></table></figure><p>来实现在本地和Hexo博客上同时加载出图片（这里也说明了图1和图2的举例的引用格式我为什么使用了图片，因为直接打出代码的话本地显示没有问题，但是博客上显示出的是被替换为<code>asset_img</code>标签的代码）。</p><p>对比图1和图2可以发现，在引用图片的路径上，图1比图2在路径前面都了一个相对路径的符号<code>./</code>，所以如果你习惯于在路径前不加<code>./</code>，那么，这个插件现在就可以满足在本地和博客上同时加载图片的需求了。但是，如果你像我一样，习惯于在路径前加<code>./</code>，那么，你还需要进行一步操作：</p><p>打开插件所在的文件夹，即<code>.\Blog\node_modules\hexo-asset-img\</code>。打开<code>index.js</code>文件，在函数<code>action</code>中加一行代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">action</span>(<span class="hljs-params">data</span>) &#123;<br>    <span class="hljs-keyword">var</span> reverseSource = data.<span class="hljs-property">source</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">reverse</span>().<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>);<br>    <span class="hljs-keyword">var</span> fileName = reverseSource.<span class="hljs-title function_">substring</span>(<span class="hljs-number">3</span>, reverseSource.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;/&quot;</span>)).<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">reverse</span>().<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>);<br>    <span class="hljs-comment">// 下面的替换操作通过查找所有的(并将其替换为(，从而去除相对路径符号。</span><br>    data.<span class="hljs-property">content</span> = data.<span class="hljs-property">content</span>.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/\(\.\//g</span>, <span class="hljs-string">&#x27;(&#x27;</span>);  <span class="hljs-comment">// 添加的一行代码</span><br>    <span class="hljs-comment">// 其余函数部分保持原样，它将接着匹配更新后的内容并进行替换。</span><br></code></pre></td></tr></table></figure><p>现在，通过改进后的<code>hexo-asset-img</code>插件，你引用加或不加相对路径的符号<code>./</code>的图片都不会出现问题了，实现了在本地和Hexo博客上同时加载出图片。</p><h1 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h1><p>当你发现<code>hexo-asset-img</code>插件在特殊情况下还存在Bug时：</p><ol><li><p>可以像上文那样直接修改<code>index.js</code>文件里的源代码来自行处理Bug。 </p></li><li><p>根据博主在<code>GitHub Issues</code>里的建议，你也可以Fork仓库<a href="https://github.com/yiyungent/hexo-asset-img">yiyungent&#x2F;hexo-asset-img</a>到自己的仓库，完善代码后，再通过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 注意网址中间替换为你自己的用户名</span><br>npm install git://github.com/yourname/hexo-asset-img.git<span class="hljs-comment">#main</span><br></code></pre></td></tr></table></figure><p>在本地安装完善好的<code>hexo-asset-img</code>插件。</p></li><li><p>你也可以像博客<a href="https://moeci.com/posts/hexo-typora/">Hexo + Typora + 开发Hexo插件 解决图片路径不一致 | yiyun’s Blog</a>中那样，在本地手动引入插件。</p><ol><li><p>在<code>.\Blog\node_modules\</code>目录下创建文件夹<code>hexo-asset-img</code>，初始化<code>npm</code>包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> .\Blog\node_modules\<br><span class="hljs-built_in">mkdir</span> hexo-asset-img<br><span class="hljs-built_in">cd</span> hexo-asset-img<br>npm init<br></code></pre></td></tr></table></figure></li><li><p>编写插件的<code>index.js</code>文件。</p></li><li><p>在<code>.\Blog\</code>目录下的<code>package.json</code>文件的<code>dependencies</code>中添加一行<code>&quot;hexo-asset-img&quot;: &quot;^1.0.0&quot;,</code>（<code>package-lock.json</code>和<code>.\Blog\node_modules\</code>目录下的<code>.package-lock.json</code>需要添加吗？没测试，不知道）。</p></li></ol></li><li></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux、Ubuntu下英文文献翻译软件、工具推荐</title>
    <link href="/posts/ecc362f9/"/>
    <url>/posts/ecc362f9/</url>
    
    <content type="html"><![CDATA[<p>本文提供了多个可以实现在Linux&#x2F;Ubuntu下进行英文文献阅读的思路，主要推荐使用Zotero的zotero-pdf-translate插件。</p><span id="more"></span><p>自己在 Windows 系统上使用到的英文文献翻译软件是<a href="https://www.zhiyunwenxian.cn/">知云文献翻译</a>，本着试一试的态度，却一见如故。</p><p>但是，自从因为研究学习的原因把主要的工作平台转到 Linux&#x2F;Ubuntu 上后，自己却始终没有找到一款较能称心如意的翻译软件&#x2F;工具。根据网上搜索和网友的推荐，自己曾做出过的尝试和遇到的问题如下：</p><ol><li><p>使用 wine 安装 Win 版的知云文献翻译。安装失败，只好作罢。知云文献翻译只提供了 Win 版和 Mac 版，自己曾问过客服，但他们近期应该是没有开发 Linux 版的想法。</p><p>wine 参考安装链接：</p><p><a href="https://blog.csdn.net/nicholas_duan/article/details/107336013">https://blog.csdn.net/nicholas_duan/article/details/107336013</a></p><p><a href="https://wiki.winehq.org/Ubuntu_zhcn">https://wiki.winehq.org/Ubuntu_zhcn</a></p></li><li><p>GoldenDict。GoldenDict 是一款词典，通过自己添加词典，可以起到查词的作用。也可以通过添加网址实现划句跳转到翻译网站进行翻译。但是，自己遇到的主要问题是在划句翻译时它的响应速度太慢。因为主要还是一款词典，所以划句翻译且是调用第三方翻译网站进行翻译就显得不那么专业了。</p><p>GoldenDict 参考安装链接：</p><p><a href="https://www.cnblogs.com/creasing/p/11333728.html">https://www.cnblogs.com/creasing/p/11333728.html</a></p></li><li><p><a href="https://fanyi.youdao.com/download-multi">有道翻译</a>。可以实现划句翻译。但是，遇到的主要问题是在自己的 2K 屏幕上有道翻译适配得并不好，界面和字体太小且不能调节，有些别扭。</p><p>有道翻译参考安装链接：</p><p><a href="https://blog.csdn.net/haojie_duan/article/details/124327367">https://blog.csdn.net/haojie_duan/article/details/124327367</a></p></li><li><p>兰译。应该是作者大大为了解决在 Linux 系统下看文献的问题专门开发的一款软件，可复制文字自动翻译、OCR识别翻译、追加翻译、自动去除换行。使用百度、腾讯接口翻译，可自定义自己的 API 账号。软件是放在 GitHub 和 Gitee 平台上的，免费，大爱比心。可惜自己在使用的时候始终导入不了自己的 API 账号，用不了。</p><p><a href="https://zhuanlan.zhihu.com/p/439439447?utm_id=0">这是作者自己在知乎上对软件的介绍</a></p><p><a href="https://github.com/yuhldr/ldr-translate">https://github.com/yuhldr/ldr-translate</a></p><p><a href="https://gitee.com/yuhldr/ldr-translate">https://gitee.com/yuhldr/ldr-translate</a></p></li><li><p>在线网页。实验室师兄们一般都用<a href="https://www.xljsci.com/">小绿鲸</a>和 <a href="https://readpaper.com/new">ReadPaper</a> 在线网页实现对英文文献 PDF 的翻译阅读。但是，一方面是考虑到个人隐私，一方面是软件不装在自己电脑本地上，为自己所有所用，就不是自己的。在线网页，自己只有“使用权”没有“所有权”，万一自己用熟之后被割韭菜了呢。当然，这是自己的顾虑，并没有特地针对谁。所以，自己并不喜欢将在线网页工具作为自己常用的工具，偶尔用一下还行。</p></li><li></li></ol><p><strong>重点来了！</strong></p><p>在行到水穷处时，自己偶然在知乎上刷到一篇<a href="https://www.zhihu.com/question/292293671/answer/3234930108?utm_psn=1704890331890393088">文章</a>，作者在里面提到了 <a href="https://www.zotero.org/">Zotero</a> 里的一个插件：<a href="https://github.com/windingwind/zotero-pdf-translate">zotero-pdf-translate</a>，可以实现划句翻译。“死马当活马医”，自己下下来装上插件一试，这不就是 Win 版的知云文献翻译吗？意外之喜，开心！再配合上其他一些插件，甚至比知云文献翻译的实用性更高了。</p><p>Zotero 参考安装链接：</p><p><a href="https://www.zotero.org/support/installation">https://www.zotero.org/support/installation</a></p><p><a href="https://zhuanlan.zhihu.com/p/436241013?utm_id=0">https://zhuanlan.zhihu.com/p/436241013?utm_id=0</a></p><p>自己早就知道 Zotero 是一款开源的文献管理软件，但是并不知道它竟然还能实现这个功能，果然开源的软件更有创造力，可以让大家都参与进来，解决自己遇到的问题，实现自己想要的功能。</p><p>因为自己目前主要是对翻译英文文献 PDF 有需求，对文献管理的需求暂时不大，所以只安装了以下几个 zotero 插件（插件官网包含有安装说明）：</p><ol><li><a href="https://github.com/windingwind/zotero-pdf-translate">zotero-pdf-translate</a>，划句翻译，支持切换Google Translate、Google Translate(API)、CNKI、Youdao Translate、Youdao Zhiyun、Niu Translate(Trial)、Niu Translate、Microsoft Translate、LingoCloud(Caiyun) Translate、DeepL Translate、Aliyun Translate、Baidu Translate、Baidu Field、Tencent Translate 和GPT(OpenAI) 等翻译引擎。</li><li><a href="https://github.com/windingwind/zotero-pdf-preview">zotero-pdf-preview</a>，在首页侧栏打开一个文件预览窗口。</li><li><a href="https://github.com/MuiseDestiny/zotero-reference">zotero-reference</a>，自动爬取并列出当前文献的所有引用文献。</li><li></li></ol><p>在此对以上各位作者表示感谢，大爱比心！</p><p>在此配上一张使用过程中的截图：</p><img src="/posts/ecc362f9/Zotero%E6%96%87%E7%8C%AE%E7%BF%BB%E8%AF%91%E4%BD%BF%E7%94%A8%E6%88%AA%E5%9B%BE.png" class="" title="Zotero文献翻译使用截图"><p>综上，在此提供了多个可以实现在 Linux&#x2F;Ubuntu 下进行英文文献阅读的思路，提供了可参考的安装链接，但具体软件配置就需要读者另寻高见和自行摸索了。</p><p>本着互联网的分享精神，将自己摸索尝试的过程分享出来，希望可以帮助到大家，少走一些弯路，把重点放在研究学习上。最好能够有意识地提高自己的英语能力，逐步摆脱对翻译软件的需求，这也将获益匪浅（怎么还说教上了呢？）。</p><p>允许转载，但请标注来源。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客美化[持续更新ing]</title>
    <link href="/posts/3edad46f/"/>
    <url>/posts/3edad46f/</url>
    
    <content type="html"><![CDATA[<p>理论上讲，这里实现的效果是基于<a href="https://hexo.io/zh-cn/index.html">Hexo</a>的，对于实际使用的主题没有要求，都是适用的。我使用的是<a href="https://hexo.fluid-dev.com/docs/">Hexo Fluid</a>主题。在这里也感谢各位开发人员的付出，让我们可以更便捷、美观地搭建出自己的个人博客。</p><span id="more"></span><h1 id="写在前面的话"><a href="#写在前面的话" class="headerlink" title="写在前面的话"></a>写在前面的话</h1><h2 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>因为我是通过<code>npm</code>命令直接安装的<a href="https://hexo.fluid-dev.com/docs/">Hexo Fluid</a>主题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><p>万一后期需要更新主题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm update --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><blockquote><p>直接使用命令行更新会覆盖掉自己对主题文件夹内做出的所有更改（血泪教训），包括图片，自定义的.js和.css文件等。本来以为只会覆盖掉不同的，不会影响新增的，失策了。这是需要注意、寻找解决办法（解决代码冲突，保留自己修改的部分）和及时备份的。</p></blockquote><p>引用<a href="https://asteri5m.gitee.io/archives/Fluid%E9%AD%94%E6%94%B9%E7%AC%94%E8%AE%B0.html">Fluid魔改笔记-Asteri5m</a>中的前言：<a href="https://hexo.fluid-dev.com/docs/">Hexo Fluid</a>主题是一款完整度比较高的主题了，一般不要修改源代码，不然导致后面更新时会很麻烦（如果你不打算更新，当我没说）。因此，引入自定义的<code>js</code>和<code>css</code>文件，这里一般在自己的主题里面都是可以找的相应位置的，不动源代码，才是最稳妥的办法。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="一般方法"><a href="#一般方法" class="headerlink" title="一般方法"></a>一般方法</h3><p>因此，我在<code>.\Blog\node_modules\hexo-theme-fluid\source\</code>目录下自定义了一个文件夹<code>custom</code>，把自定义的<code>js</code>和<code>css</code>及其他文件（夹）统一放在该文件夹下，方便管理、查找、修改和备份。</p><p>可以在博客根目录<code>.\Blog</code>下的主题配置文件<code>_config.fluid.yml</code>中的<code>custom_js</code>和<code>custom_css</code>中分别引入自定义的<code>js</code>和<code>css</code>文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 指定自定义 .js 文件路径，支持列表；路径是相对 source 目录，如 /js/custom.js 对应存放目录 source/js/custom.js</span><br><span class="hljs-comment"># Specify the path of your custom js file, support list. The path is relative to the source directory, such as `/js/custom.js` corresponding to the directory `source/js/custom.js`</span><br><span class="hljs-attr">custom_js:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/custom/live2d/live2d-widget/autoload.js</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/custom/live2d/jquery.min.js</span><br><br><span class="hljs-comment"># 指定自定义 .css 文件路径，用法和 custom_js 相同</span><br><span class="hljs-comment"># The usage is the same as custom_js</span><br><span class="hljs-attr">custom_css:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/custom/Markdown/macpanel</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/custom/live2d/font-awesome.min.css</span><br></code></pre></td></tr></table></figure><h3 id="Hexo注入代码"><a href="#Hexo注入代码" class="headerlink" title="Hexo注入代码"></a>Hexo注入代码</h3><h4 id="方法介绍"><a href="#方法介绍" class="headerlink" title="方法介绍"></a>方法介绍</h4><p><a href="https://hexo.io/zh-cn/api/injector.html">Hexo注入器</a>是 Hexo 5 版本自身加入的一项新功能，所以在所有 Hexo 主题都是支持这个功能的。注入器可以将 HTML 片段注入生成页面的 <code>&lt;head&gt;</code> 和 <code>&lt;body&gt;</code> 节点中。</p><p>编写注入代码，需要在博客的根目录<code>.\Blog\</code>下创建<code>scripts</code>文件夹，然后在里面任意命名创建一个<code>js</code>文件即可。例如创建一个 <code>./blog/scripts/example.js</code>，内容为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">injector</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;body_end&#x27;</span>, <span class="hljs-string">&#x27;&lt;script src=&quot;/jquery.js&quot;&gt;&lt;/script&gt;&#x27;</span>, <span class="hljs-string">&#x27;default&#x27;</span>);<br></code></pre></td></tr></table></figure><p>上述代码会在生成的页面 <code>&lt;/body&gt;</code> 注入加载 <code>jquery.js</code> 的代码。</p><blockquote><p><a href="https://hexo.fluid-dev.com/docs/">Hexo Fluid</a>主题也提供了一套注入代码功能，相较于 Hexo 注入功能更细致更丰富，并且支持注入 <code>ejs</code> 代码。这里仅做介绍，不具体展开。关于Hexo和Fluid注入代码的方法和参数含义，请见<a href="https://hexo.fluid-dev.com/docs/advance/">进阶用法 | Hexo Fluid 用户手册</a>。</p></blockquote><p>因此对于不得不修改主题源代码的地方，我会尽量选择注入代码的方法而不是直接修改源代码文件。</p><p>最后，对于找不到别的办法，只能修改主题源代码的地方，我会做好备注，方便在主题更新后再重新在对应位置复现一遍更改。</p><h4 id="HTML标签小知识"><a href="#HTML标签小知识" class="headerlink" title="HTML标签小知识"></a>HTML标签小知识</h4><p>问：JavaScript脚本放在<code>&lt;head&gt;</code>、<code>&lt;body&gt;</code>、<code>&lt;header&gt;</code>和<code>&lt;footer&gt;</code>的区别。</p><p>以下是ChatGPT的回答：</p><p>在HTML文档中，JavaScript脚本可以放在<code>&lt;head&gt;</code>、<code>&lt;body&gt;</code>、<code>&lt;header&gt;</code>和<code>&lt;footer&gt;</code>等不同的部分，各自的位置会对脚本的加载和执行产生不同的影响：</p><ol><li><strong>放在<code>&lt;head&gt;</code>中</strong>:<ul><li>当脚本放在<code>&lt;head&gt;</code>中时，它们会在文档的其余部分（即<code>&lt;body&gt;</code>内的内容）被解析之前加载和执行。</li><li>这意味着如果脚本较大或加载时间较长，它可能会延迟网页内容的显示，因为浏览器会先执行头部的脚本。</li><li>通常，如果脚本不依赖于页面中的任何DOM元素，或者需要尽早加载（如字符集声明或某些配置脚本），则可能会放在<code>&lt;head&gt;</code>中。</li></ul></li><li><strong>放在<code>&lt;body&gt;</code>中</strong>:<ul><li>将脚本放在<code>&lt;body&gt;</code>的末尾，即页面内容之后，是一种常见和推荐的做法，特别是如果脚本需要操作DOM元素的时候。</li><li>这样做可以确保在脚本执行时，页面中的DOM元素已经被解析和加载，减少了因为DOM尚未加载完毕导致的错误。</li><li>此外，这也允许浏览器更快地渲染页面的可视内容，因为脚本的加载和执行是在页面内容加载完毕之后进行的。</li></ul></li><li><strong>放在<code>&lt;header&gt;</code>或<code>&lt;footer&gt;</code>中</strong>:<ul><li><code>&lt;header&gt;</code>或<code>&lt;footer&gt;</code>标签是<code>&lt;body&gt;</code>标签内的一部分，因此将脚本放在这些位置本质上是将它们放在<code>&lt;body&gt;</code>的某个位置。</li><li>将脚本放在<code>&lt;header&gt;</code>或<code>&lt;footer&gt;</code>中并没有特别的技术优势，通常取决于脚本的作用和需要执行的时机。例如，你可能希望在页面头部区域加载的导航脚本放在<code>&lt;header&gt;</code>标签内，或者在页面底部放置与页脚相关的脚本。</li></ul></li></ol><p><strong>其他注意事项</strong>:</p><ul><li><strong>异步和延迟加载</strong>：无论脚本放在哪里，使用<code>async</code>或<code>defer</code>属性可以控制脚本的加载和执行方式。<code>async</code>用于异步加载脚本，而<code>defer</code>会延迟执行脚本直到文档解析完成。</li><li><strong>外部脚本和模块</strong>：对于外部脚本或模块，放置的位置同样遵循上述逻辑，但可能更依赖于脚本的功能和预期的加载行为。</li></ul><p>综上所述，将脚本放在哪里取决于脚本的作用、对页面加载性能的影响，以及对DOM元素的依赖情况。通常推荐将影响DOM的脚本放在<code>&lt;body&gt;</code>的底部以提高页面加载速度和用户体验。</p><h3 id="补救措施"><a href="#补救措施" class="headerlink" title="补救措施"></a>补救措施</h3><p>另外，发现提交到<code>GitHub</code>上的文件夹，即<code>.\Blog\.deploy_git</code>里面存有<code>.\Blog\node_modules\hexo-theme-fluid\</code>即主题文件夹下的配置文件等内容。因此，如果在更新主题前没有及时备份，导致更新主题后之前在主题文件夹下自定义和修改过的文件（夹）被覆盖掉。可以在更新主题后不要急着<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code>，这之前可以在<code>.\Blog\.deploy_git</code>里面或者<code>GitHub</code>上对应的的存储库中找到之前的文件（夹）。</p><h1 id="鼠标点击特效"><a href="#鼠标点击特效" class="headerlink" title="鼠标点击特效"></a>鼠标点击特效</h1><p>最终效果如下图所示：</p><img src="/posts/3edad46f/%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88-1.gif" class="" title="鼠标点击特效-1"><h2 id="摸索过程"><a href="#摸索过程" class="headerlink" title="摸索过程"></a>摸索过程</h2><p>摸索过程有些许参考价值，方便后期<strong>自定义</strong>。</p><h3 id="初步尝试"><a href="#初步尝试" class="headerlink" title="初步尝试"></a>初步尝试</h3><p>自己首先根据<a href="https://weicun581.github.io/2023/05/06/Hexo%E5%8D%9A%E5%AE%A2next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88/">鼠标点击特效的参考链接-1</a>的说明，在<code>.\Blog\node_modules\hexo-theme-fluid\source\custom\</code>目录下新建文件夹<code>fireworks</code>，在该文件夹内新建文件<code>fireworks.js</code>并写入以下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-meta">&quot;use strict&quot;</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">updateCoords</span>(<span class="hljs-params">e</span>)&#123;pointerX=(e.<span class="hljs-property">clientX</span>||e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientX</span>)-canvasEl.<span class="hljs-title function_">getBoundingClientRect</span>().<span class="hljs-property">left</span>,pointerY=e.<span class="hljs-property">clientY</span>||e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientY</span>-canvasEl.<span class="hljs-title function_">getBoundingClientRect</span>().<span class="hljs-property">top</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">setParticuleDirection</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,<span class="hljs-number">360</span>)*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>/<span class="hljs-number">180</span>,a=anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">50</span>,<span class="hljs-number">180</span>),n=[-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>][anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)]*a;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">x</span>:e.<span class="hljs-property">x</span>+n*<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(t),<span class="hljs-attr">y</span>:e.<span class="hljs-property">y</span>+n*<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(t)&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">createParticule</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> a=&#123;&#125;;<span class="hljs-keyword">return</span> a.<span class="hljs-property">x</span>=e,a.<span class="hljs-property">y</span>=t,a.<span class="hljs-property">color</span>=colors[anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,colors.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>)],a.<span class="hljs-property">radius</span>=anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">16</span>,<span class="hljs-number">32</span>),a.<span class="hljs-property">endPos</span>=<span class="hljs-title function_">setParticuleDirection</span>(a),a.<span class="hljs-property">draw</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;ctx.<span class="hljs-title function_">beginPath</span>(),ctx.<span class="hljs-title function_">arc</span>(a.<span class="hljs-property">x</span>,a.<span class="hljs-property">y</span>,a.<span class="hljs-property">radius</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>,!<span class="hljs-number">0</span>),ctx.<span class="hljs-property">fillStyle</span>=a.<span class="hljs-property">color</span>,ctx.<span class="hljs-title function_">fill</span>()&#125;,a&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">createCircle</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> a=&#123;&#125;;<span class="hljs-keyword">return</span> a.<span class="hljs-property">x</span>=e,a.<span class="hljs-property">y</span>=t,a.<span class="hljs-property">color</span>=<span class="hljs-string">&quot;#F00&quot;</span>,a.<span class="hljs-property">radius</span>=<span class="hljs-number">0.1</span>,a.<span class="hljs-property">alpha</span>=<span class="hljs-number">0.5</span>,a.<span class="hljs-property">lineWidth</span>=<span class="hljs-number">6</span>,a.<span class="hljs-property">draw</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;ctx.<span class="hljs-property">globalAlpha</span>=a.<span class="hljs-property">alpha</span>,ctx.<span class="hljs-title function_">beginPath</span>(),ctx.<span class="hljs-title function_">arc</span>(a.<span class="hljs-property">x</span>,a.<span class="hljs-property">y</span>,a.<span class="hljs-property">radius</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>,!<span class="hljs-number">0</span>),ctx.<span class="hljs-property">lineWidth</span>=a.<span class="hljs-property">lineWidth</span>,ctx.<span class="hljs-property">strokeStyle</span>=a.<span class="hljs-property">color</span>,ctx.<span class="hljs-title function_">stroke</span>(),ctx.<span class="hljs-property">globalAlpha</span>=<span class="hljs-number">1</span>&#125;,a&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">renderParticule</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t=<span class="hljs-number">0</span>;t&lt;e.<span class="hljs-property">animatables</span>.<span class="hljs-property">length</span>;t++)&#123;e.<span class="hljs-property">animatables</span>[t].<span class="hljs-property">target</span>.<span class="hljs-title function_">draw</span>()&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">animateParticules</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> a=<span class="hljs-title function_">createCircle</span>(e,t),n=[],i=<span class="hljs-number">0</span>;i&lt;numberOfParticules;i++)&#123;n.<span class="hljs-title function_">push</span>(<span class="hljs-title function_">createParticule</span>(e,t))&#125;anime.<span class="hljs-title function_">timeline</span>().<span class="hljs-title function_">add</span>(&#123;<span class="hljs-attr">targets</span>:n,<span class="hljs-attr">x</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">endPos</span>.<span class="hljs-property">x</span>&#125;,<span class="hljs-attr">y</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">endPos</span>.<span class="hljs-property">y</span>&#125;,<span class="hljs-attr">radius</span>:<span class="hljs-number">0.1</span>,<span class="hljs-attr">duration</span>:anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>),<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">update</span>:renderParticule&#125;).<span class="hljs-title function_">add</span>(&#123;<span class="hljs-attr">targets</span>:a,<span class="hljs-attr">radius</span>:anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">80</span>,<span class="hljs-number">160</span>),<span class="hljs-attr">lineWidth</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">alpha</span>:&#123;<span class="hljs-attr">value</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;linear&quot;</span>,<span class="hljs-attr">duration</span>:anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">600</span>,<span class="hljs-number">800</span>)&#125;,<span class="hljs-attr">duration</span>:anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>),<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">update</span>:renderParticule,<span class="hljs-attr">offset</span>:<span class="hljs-number">0</span>&#125;)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">debounce</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> a;<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-variable language_">this</span>,i=<span class="hljs-variable language_">arguments</span>;<span class="hljs-built_in">clearTimeout</span>(a),a=<span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;e.<span class="hljs-title function_">apply</span>(n,i)&#125;,t)&#125;&#125;<span class="hljs-keyword">var</span> canvasEl=<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.fireworks&quot;</span>);<span class="hljs-keyword">if</span>(canvasEl)&#123;<span class="hljs-keyword">var</span> ctx=canvasEl.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>),numberOfParticules=<span class="hljs-number">30</span>,pointerX=<span class="hljs-number">0</span>,pointerY=<span class="hljs-number">0</span>,tap=<span class="hljs-string">&quot;mousedown&quot;</span>,colors=[<span class="hljs-string">&quot;#FF1461&quot;</span>,<span class="hljs-string">&quot;#18FF92&quot;</span>,<span class="hljs-string">&quot;#5A87FF&quot;</span>,<span class="hljs-string">&quot;#FBF38C&quot;</span>],setCanvasSize=<span class="hljs-title function_">debounce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;canvasEl.<span class="hljs-property">width</span>=<span class="hljs-number">2</span>*<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>,canvasEl.<span class="hljs-property">height</span>=<span class="hljs-number">2</span>*<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>,canvasEl.<span class="hljs-property">style</span>.<span class="hljs-property">width</span>=<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>+<span class="hljs-string">&quot;px&quot;</span>,canvasEl.<span class="hljs-property">style</span>.<span class="hljs-property">height</span>=<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>+<span class="hljs-string">&quot;px&quot;</span>,canvasEl.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>).<span class="hljs-title function_">scale</span>(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)&#125;,<span class="hljs-number">500</span>),render=<span class="hljs-title function_">anime</span>(&#123;<span class="hljs-attr">duration</span>:<span class="hljs-number">1</span>/<span class="hljs-number">0</span>,<span class="hljs-attr">update</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;ctx.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,canvasEl.<span class="hljs-property">width</span>,canvasEl.<span class="hljs-property">height</span>)&#125;&#125;);<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(tap,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-string">&quot;sidebar&quot;</span>!==e.<span class="hljs-property">target</span>.<span class="hljs-property">id</span>&amp;&amp;<span class="hljs-string">&quot;toggle-sidebar&quot;</span>!==e.<span class="hljs-property">target</span>.<span class="hljs-property">id</span>&amp;&amp;<span class="hljs-string">&quot;A&quot;</span>!==e.<span class="hljs-property">target</span>.<span class="hljs-property">nodeName</span>&amp;&amp;<span class="hljs-string">&quot;IMG&quot;</span>!==e.<span class="hljs-property">target</span>.<span class="hljs-property">nodeName</span>&amp;&amp;(render.<span class="hljs-title function_">play</span>(),<span class="hljs-title function_">updateCoords</span>(e),<span class="hljs-title function_">animateParticules</span>(pointerX,pointerY))&#125;,!<span class="hljs-number">1</span>),<span class="hljs-title function_">setCanvasSize</span>(),<span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;resize&quot;</span>,setCanvasSize,!<span class="hljs-number">1</span>)&#125;<span class="hljs-string">&quot;use strict&quot;</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">updateCoords</span>(<span class="hljs-params">e</span>)&#123;pointerX=(e.<span class="hljs-property">clientX</span>||e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientX</span>)-canvasEl.<span class="hljs-title function_">getBoundingClientRect</span>().<span class="hljs-property">left</span>,pointerY=e.<span class="hljs-property">clientY</span>||e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientY</span>-canvasEl.<span class="hljs-title function_">getBoundingClientRect</span>().<span class="hljs-property">top</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">setParticuleDirection</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,<span class="hljs-number">360</span>)*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>/<span class="hljs-number">180</span>,a=anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">50</span>,<span class="hljs-number">180</span>),n=[-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>][anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)]*a;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">x</span>:e.<span class="hljs-property">x</span>+n*<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(t),<span class="hljs-attr">y</span>:e.<span class="hljs-property">y</span>+n*<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(t)&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">createParticule</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> a=&#123;&#125;;<span class="hljs-keyword">return</span> a.<span class="hljs-property">x</span>=e,a.<span class="hljs-property">y</span>=t,a.<span class="hljs-property">color</span>=colors[anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,colors.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>)],a.<span class="hljs-property">radius</span>=anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">16</span>,<span class="hljs-number">32</span>),a.<span class="hljs-property">endPos</span>=<span class="hljs-title function_">setParticuleDirection</span>(a),a.<span class="hljs-property">draw</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;ctx.<span class="hljs-title function_">beginPath</span>(),ctx.<span class="hljs-title function_">arc</span>(a.<span class="hljs-property">x</span>,a.<span class="hljs-property">y</span>,a.<span class="hljs-property">radius</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>,!<span class="hljs-number">0</span>),ctx.<span class="hljs-property">fillStyle</span>=a.<span class="hljs-property">color</span>,ctx.<span class="hljs-title function_">fill</span>()&#125;,a&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">createCircle</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> a=&#123;&#125;;<span class="hljs-keyword">return</span> a.<span class="hljs-property">x</span>=e,a.<span class="hljs-property">y</span>=t,a.<span class="hljs-property">color</span>=<span class="hljs-string">&quot;#F00&quot;</span>,a.<span class="hljs-property">radius</span>=<span class="hljs-number">0.1</span>,a.<span class="hljs-property">alpha</span>=<span class="hljs-number">0.5</span>,a.<span class="hljs-property">lineWidth</span>=<span class="hljs-number">6</span>,a.<span class="hljs-property">draw</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;ctx.<span class="hljs-property">globalAlpha</span>=a.<span class="hljs-property">alpha</span>,ctx.<span class="hljs-title function_">beginPath</span>(),ctx.<span class="hljs-title function_">arc</span>(a.<span class="hljs-property">x</span>,a.<span class="hljs-property">y</span>,a.<span class="hljs-property">radius</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>,!<span class="hljs-number">0</span>),ctx.<span class="hljs-property">lineWidth</span>=a.<span class="hljs-property">lineWidth</span>,ctx.<span class="hljs-property">strokeStyle</span>=a.<span class="hljs-property">color</span>,ctx.<span class="hljs-title function_">stroke</span>(),ctx.<span class="hljs-property">globalAlpha</span>=<span class="hljs-number">1</span>&#125;,a&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">renderParticule</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t=<span class="hljs-number">0</span>;t&lt;e.<span class="hljs-property">animatables</span>.<span class="hljs-property">length</span>;t++)&#123;e.<span class="hljs-property">animatables</span>[t].<span class="hljs-property">target</span>.<span class="hljs-title function_">draw</span>()&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">animateParticules</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> a=<span class="hljs-title function_">createCircle</span>(e,t),n=[],i=<span class="hljs-number">0</span>;i&lt;numberOfParticules;i++)&#123;n.<span class="hljs-title function_">push</span>(<span class="hljs-title function_">createParticule</span>(e,t))&#125;anime.<span class="hljs-title function_">timeline</span>().<span class="hljs-title function_">add</span>(&#123;<span class="hljs-attr">targets</span>:n,<span class="hljs-attr">x</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">endPos</span>.<span class="hljs-property">x</span>&#125;,<span class="hljs-attr">y</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">endPos</span>.<span class="hljs-property">y</span>&#125;,<span class="hljs-attr">radius</span>:<span class="hljs-number">0.1</span>,<span class="hljs-attr">duration</span>:anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>),<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">update</span>:renderParticule&#125;).<span class="hljs-title function_">add</span>(&#123;<span class="hljs-attr">targets</span>:a,<span class="hljs-attr">radius</span>:anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">80</span>,<span class="hljs-number">160</span>),<span class="hljs-attr">lineWidth</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">alpha</span>:&#123;<span class="hljs-attr">value</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;linear&quot;</span>,<span class="hljs-attr">duration</span>:anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">600</span>,<span class="hljs-number">800</span>)&#125;,<span class="hljs-attr">duration</span>:anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>),<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">update</span>:renderParticule,<span class="hljs-attr">offset</span>:<span class="hljs-number">0</span>&#125;)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">debounce</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> a;<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-variable language_">this</span>,i=<span class="hljs-variable language_">arguments</span>;<span class="hljs-built_in">clearTimeout</span>(a),a=<span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;e.<span class="hljs-title function_">apply</span>(n,i)&#125;,t)&#125;&#125;<span class="hljs-keyword">var</span> canvasEl=<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.fireworks&quot;</span>);<span class="hljs-keyword">if</span>(canvasEl)&#123;<span class="hljs-keyword">var</span> ctx=canvasEl.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>),numberOfParticules=<span class="hljs-number">30</span>,pointerX=<span class="hljs-number">0</span>,pointerY=<span class="hljs-number">0</span>,tap=<span class="hljs-string">&quot;mousedown&quot;</span>,colors=[<span class="hljs-string">&quot;#FF1461&quot;</span>,<span class="hljs-string">&quot;#18FF92&quot;</span>,<span class="hljs-string">&quot;#5A87FF&quot;</span>,<span class="hljs-string">&quot;#FBF38C&quot;</span>],setCanvasSize=<span class="hljs-title function_">debounce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;canvasEl.<span class="hljs-property">width</span>=<span class="hljs-number">2</span>*<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>,canvasEl.<span class="hljs-property">height</span>=<span class="hljs-number">2</span>*<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>,canvasEl.<span class="hljs-property">style</span>.<span class="hljs-property">width</span>=<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>+<span class="hljs-string">&quot;px&quot;</span>,canvasEl.<span class="hljs-property">style</span>.<span class="hljs-property">height</span>=<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>+<span class="hljs-string">&quot;px&quot;</span>,canvasEl.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>).<span class="hljs-title function_">scale</span>(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)&#125;,<span class="hljs-number">500</span>),render=<span class="hljs-title function_">anime</span>(&#123;<span class="hljs-attr">duration</span>:<span class="hljs-number">1</span>/<span class="hljs-number">0</span>,<span class="hljs-attr">update</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;ctx.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,canvasEl.<span class="hljs-property">width</span>,canvasEl.<span class="hljs-property">height</span>)&#125;&#125;);<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(tap,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-string">&quot;sidebar&quot;</span>!==e.<span class="hljs-property">target</span>.<span class="hljs-property">id</span>&amp;&amp;<span class="hljs-string">&quot;toggle-sidebar&quot;</span>!==e.<span class="hljs-property">target</span>.<span class="hljs-property">id</span>&amp;&amp;<span class="hljs-string">&quot;A&quot;</span>!==e.<span class="hljs-property">target</span>.<span class="hljs-property">nodeName</span>&amp;&amp;<span class="hljs-string">&quot;IMG&quot;</span>!==e.<span class="hljs-property">target</span>.<span class="hljs-property">nodeName</span>&amp;&amp;(render.<span class="hljs-title function_">play</span>(),<span class="hljs-title function_">updateCoords</span>(e),<span class="hljs-title function_">animateParticules</span>(pointerX,pointerY))&#125;,!<span class="hljs-number">1</span>),<span class="hljs-title function_">setCanvasSize</span>(),<span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;resize&quot;</span>,setCanvasSize,!<span class="hljs-number">1</span>)&#125;;<br></code></pre></td></tr></table></figure><p>然后，在<code>.\Blog\node_modules\hexo-theme-fluid\layout</code>目录下的<code>layout.ejs</code>文件末尾加入以下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;canvas <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;fireworks&quot;</span> style=<span class="hljs-string">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;&lt;/canvas&gt; <br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span> <br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/custom/fireworks/fireworks.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>注意：</p><ol><li><p>这里是将这三行语句直接加入到了<code>layout.ejs</code>文件末尾，而没有根据<a href="https://weicun581.github.io/2023/05/06/Hexo%E5%8D%9A%E5%AE%A2next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88/">鼠标点击特效的参考链接-1</a>的说明加入到文件的<code>&lt;body&gt;</code>块中。因为实际测试下加入到<code>&lt;body&gt;</code>块中博客显示有些问题，而直接加到文件末尾反而功能正常。</p></li><li><p><a href="https://weicun581.github.io/2023/05/06/Hexo%E5%8D%9A%E5%AE%A2next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88/">鼠标点击特效的参考链接-1</a>的原语句如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">   &#123;% <span class="hljs-keyword">if</span> theme.<span class="hljs-property">fireworks</span> %&#125;<br>   &lt;canvas <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;fireworks&quot;</span> style=<span class="hljs-string">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;&lt;/canvas&gt; <br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span> <br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/fireworks.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&#123;% endif %&#125;<br></code></pre></td></tr></table></figure><p>然后，在<code>./Blog/_config.fluid.yml</code>文件末尾加入：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">fireworks</span>: <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>这应该为了后期统一管理，方便一键开启鼠标点击效果。实际自己没有进行这一步</p></li><li></li></ol><p>最后，在<code>./Blog</code>文件夹下打开<code>Git Bash</code>，输入以下命令部署博客：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><p>接着输入以下命令查看部署：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s<br></code></pre></td></tr></table></figure><p>浏览器输入 <a href="http://localhost:4000/">http://localhost:4000</a> 就可以打开新部署的网页，预览博客。过段时间后，自己的博客应该就会同步更新了。</p><h3 id="遇到的问题和解决"><a href="#遇到的问题和解决" class="headerlink" title="遇到的问题和解决"></a>遇到的问题和解决</h3><p>在预览博客时，自己发现的一个主要问题是鼠标点击效果会被正文挡住，我猜应该是图层上下排列顺序的问题，不过自己对这方面没有涉猎，只是凭空猜想（现在自己猜测应该是<code>layout.ejs</code>文件末尾新增三行语句中<code>z-index</code>参数值的问题，该值越大所在的图层就越高，最大值是？所以其实改大<code>z-index</code>参数值就可以解决该问题了）。因此，又在网上找到了两个参考链接，<a href="https://argvchs.netlify.app/2022/04/17/hexo-blog-3/">鼠标点击特效的参考链接-2</a>的效果如下图所示：</p><img src="/posts/3edad46f/%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88-2.gif" class="" title="鼠标点击特效-2"><p><a href="https://blog-yunsheng.cn/2023/04/12/hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/">鼠标点击特效的参考链接-3</a>的效果如下图所示：</p><img src="/posts/3edad46f/%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88-3.gif" class="" title="鼠标点击特效-3"><p>实际点击效果可以点击参考链接到博主的博客上点点看，这里截得有点粗糙。</p><p>3个参考链接实现步骤基本一致，<a href="https://argvchs.netlify.app/2022/04/17/hexo-blog-3/">鼠标点击特效的参考链接-2</a>和<a href="https://blog-yunsheng.cn/2023/04/12/hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/">鼠标点击特效的参考链接-3</a>定义的是一个<code>fireworks.min.js</code>文件，内容分别如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 鼠标点击特效的参考链接-2的fireworks.min.js文件内容</span><br>!<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">function</span> <span class="hljs-title function_">i</span>(<span class="hljs-params"></span>)&#123;scale=<span class="hljs-variable language_">window</span>.<span class="hljs-property">devicePixelRatio</span>||<span class="hljs-number">1</span>,n.<span class="hljs-property">width</span>=<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>*scale,n.<span class="hljs-property">height</span>=<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>*scale,u.<span class="hljs-title function_">scale</span>(scale,scale)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">r</span>(<span class="hljs-params">n</span>)&#123;-<span class="hljs-number">1</span>&lt;(n=d.<span class="hljs-title function_">indexOf</span>(n))&amp;&amp;d.<span class="hljs-title function_">splice</span>(n,<span class="hljs-number">1</span>)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">e</span>(<span class="hljs-params">n,e</span>)&#123;<span class="hljs-title function_">i</span>();<span class="hljs-keyword">var</span> t,a=<span class="hljs-keyword">function</span>(<span class="hljs-params">n,e</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t=[],a=<span class="hljs-number">0</span>;a&lt;<span class="hljs-number">24</span>;a++)&#123;<span class="hljs-keyword">var</span> i=<span class="hljs-keyword">function</span>(<span class="hljs-params">n,e</span>)&#123;<span class="hljs-keyword">var</span> t=&#123;&#125;;<span class="hljs-keyword">return</span> t.<span class="hljs-property">x</span>=n,t.<span class="hljs-property">y</span>=e,t.<span class="hljs-property">color</span>=c[anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,c.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>)],t.<span class="hljs-property">radius</span>=anime.<span class="hljs-title function_">random</span>(<span class="hljs-title function_">o</span>(),<span class="hljs-number">2</span>*<span class="hljs-title function_">o</span>()),t.<span class="hljs-property">draw</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;u.<span class="hljs-title function_">beginPath</span>(),u.<span class="hljs-title function_">arc</span>(t.<span class="hljs-property">x</span>,t.<span class="hljs-property">y</span>,t.<span class="hljs-property">radius</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>,!<span class="hljs-number">0</span>),u.<span class="hljs-property">fillStyle</span>=t.<span class="hljs-property">color</span>,u.<span class="hljs-title function_">fill</span>()&#125;,t&#125;(n,e);t.<span class="hljs-title function_">push</span>(i)&#125;<span class="hljs-keyword">return</span> t&#125;(n,e),n=(e=e,(t=&#123;&#125;).<span class="hljs-property">x</span>=n,t.<span class="hljs-property">y</span>=e,t.<span class="hljs-property">color</span>=c[anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,c.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>)],t.<span class="hljs-property">color</span>=<span class="hljs-string">&quot;#FFF&quot;</span>,t.<span class="hljs-property">radius</span>=<span class="hljs-number">0</span>,t.<span class="hljs-property">alpha</span>=<span class="hljs-number">1</span>,t.<span class="hljs-property">lineWidth</span>=<span class="hljs-number">6</span>,t.<span class="hljs-property">draw</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;u.<span class="hljs-property">globalAlpha</span>=t.<span class="hljs-property">alpha</span>,u.<span class="hljs-title function_">beginPath</span>(),u.<span class="hljs-title function_">arc</span>(t.<span class="hljs-property">x</span>,t.<span class="hljs-property">y</span>,t.<span class="hljs-property">radius</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>,!<span class="hljs-number">0</span>),u.<span class="hljs-property">lineWidth</span>=t.<span class="hljs-property">lineWidth</span>,u.<span class="hljs-property">strokeStyle</span>=t.<span class="hljs-property">color</span>,u.<span class="hljs-title function_">stroke</span>(),u.<span class="hljs-property">globalAlpha</span>=<span class="hljs-number">1</span>&#125;,t),e=<span class="hljs-title function_">anime</span>(&#123;<span class="hljs-attr">targets</span>:a,<span class="hljs-attr">x</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)&#123;<span class="hljs-keyword">return</span> n.<span class="hljs-property">x</span>+anime.<span class="hljs-title function_">random</span>(-<span class="hljs-number">200</span>,<span class="hljs-number">200</span>)&#125;,<span class="hljs-attr">y</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)&#123;<span class="hljs-keyword">return</span> n.<span class="hljs-property">y</span>+anime.<span class="hljs-title function_">random</span>(-<span class="hljs-number">200</span>,<span class="hljs-number">200</span>)&#125;,<span class="hljs-attr">radius</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">duration</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>)&#125;,<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">complete</span>:r&#125;),a=<span class="hljs-title function_">anime</span>(&#123;<span class="hljs-attr">targets</span>:n,<span class="hljs-attr">radius</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">8.75</span>*<span class="hljs-title function_">o</span>(),<span class="hljs-number">11.25</span>*<span class="hljs-title function_">o</span>())&#125;,<span class="hljs-attr">lineWidth</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">alpha</span>:&#123;<span class="hljs-attr">value</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;linear&quot;</span>,<span class="hljs-attr">duration</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">400</span>,<span class="hljs-number">600</span>)&#125;&#125;,<span class="hljs-attr">duration</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>)&#125;,<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">complete</span>:r&#125;);d.<span class="hljs-title function_">push</span>(e),d.<span class="hljs-title function_">push</span>(a)&#125;<span class="hljs-keyword">var</span> t,a,o=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-built_in">parseFloat</span>(<span class="hljs-title function_">getComputedStyle</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>).<span class="hljs-property">fontSize</span>)&#125;,n=<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;fireworks&quot;</span>),u=n.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>),d=[],c=[<span class="hljs-string">&quot;#ff324a&quot;</span>,<span class="hljs-string">&quot;#31ffa6&quot;</span>,<span class="hljs-string">&quot;#206eff&quot;</span>,<span class="hljs-string">&quot;#ffff99&quot;</span>];<span class="hljs-title function_">anime</span>(&#123;<span class="hljs-attr">duration</span>:<span class="hljs-number">1</span>/<span class="hljs-number">0</span>,<span class="hljs-attr">update</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;u.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,n.<span class="hljs-property">width</span>,n.<span class="hljs-property">height</span>),d.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)&#123;n.<span class="hljs-property">animatables</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)&#123;n.<span class="hljs-property">target</span>.<span class="hljs-title function_">draw</span>()&#125;)&#125;)&#125;&#125;),<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;mousedown&quot;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">n</span>)&#123;t=n.<span class="hljs-property">clientX</span>,a=n.<span class="hljs-property">clientY</span>,<span class="hljs-title function_">e</span>(t,a)&#125;,!<span class="hljs-number">1</span>),<span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;resize&quot;</span>,i,!<span class="hljs-number">1</span>)&#125;();<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 鼠标点击特效的参考链接-3的fireworks.min.js文件内容</span><br>!<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123; <span class="hljs-keyword">var</span> we = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;canvas&quot;</span>); we.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span> = <span class="hljs-string">&quot;position:fixed;top:0;left:0;pointer-events:none;z-index:9999999&quot;</span>; <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(we); <span class="hljs-keyword">var</span> <span class="hljs-title class_">Ce</span> = we.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>); <span class="hljs-keyword">var</span> xe = <span class="hljs-number">30</span>; <span class="hljs-keyword">var</span> ke = <span class="hljs-number">0</span>; <span class="hljs-keyword">var</span> <span class="hljs-title class_">Le</span> = <span class="hljs-number">0</span>; <span class="hljs-keyword">var</span> <span class="hljs-title class_">Ee</span> = <span class="hljs-string">&quot;click&quot;</span>; <span class="hljs-keyword">var</span> <span class="hljs-title class_">Te</span> = [<span class="hljs-string">&quot;rgba(255,182,185,.9)&quot;</span>, <span class="hljs-string">&quot;rgba(250,227,217,.9)&quot;</span>, <span class="hljs-string">&quot;rgba(187,222,214,.9)&quot;</span>, <span class="hljs-string">&quot;rgba(138,198,209,.9)&quot;</span>]; <span class="hljs-keyword">function</span> <span class="hljs-title function_">Me</span>(<span class="hljs-params"></span>) &#123; we.<span class="hljs-property">width</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span> * <span class="hljs-number">2</span>; we.<span class="hljs-property">height</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span> * <span class="hljs-number">2</span>; we.<span class="hljs-property">style</span>.<span class="hljs-property">width</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span> + <span class="hljs-string">&quot;px&quot;</span>; we.<span class="hljs-property">style</span>.<span class="hljs-property">height</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span> + <span class="hljs-string">&quot;px&quot;</span>; we.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>).<span class="hljs-title function_">scale</span>(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>) &#125; <span class="hljs-keyword">function</span> <span class="hljs-title function_">Ne</span>(<span class="hljs-params">e</span>) &#123; ke = e.<span class="hljs-property">clientX</span> || e.<span class="hljs-property">touches</span> &amp;&amp; e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientX</span>; <span class="hljs-title class_">Le</span> = e.<span class="hljs-property">clientY</span> || e.<span class="hljs-property">touches</span> &amp;&amp; e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientY</span> &#125; <span class="hljs-keyword">function</span> <span class="hljs-title function_">Oe</span>(<span class="hljs-params">e</span>) &#123; <span class="hljs-keyword">var</span> t = anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>, <span class="hljs-number">360</span>) * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">180</span>; <span class="hljs-keyword">var</span> n = anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">50</span>, <span class="hljs-number">180</span>); <span class="hljs-keyword">var</span> a = [-<span class="hljs-number">1</span>, <span class="hljs-number">1</span>][anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>)] * n; <span class="hljs-keyword">return</span> &#123; <span class="hljs-attr">x</span>: e.<span class="hljs-property">x</span> + a * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(t), <span class="hljs-attr">y</span>: e.<span class="hljs-property">y</span> + a * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(t) &#125; &#125; <span class="hljs-keyword">function</span> <span class="hljs-title function_">je</span>(<span class="hljs-params">e, t</span>) &#123; <span class="hljs-keyword">var</span> n = &#123;&#125;; n.<span class="hljs-property">x</span> = e; n.<span class="hljs-property">y</span> = t; n.<span class="hljs-property">color</span> = <span class="hljs-title class_">Te</span>[anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>, <span class="hljs-title class_">Te</span>.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>)]; n.<span class="hljs-property">radius</span> = anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">16</span>, <span class="hljs-number">32</span>); n.<span class="hljs-property">endPos</span> = <span class="hljs-title class_">Oe</span>(n); n.<span class="hljs-property">draw</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123; <span class="hljs-title class_">Ce</span>.<span class="hljs-title function_">beginPath</span>(); <span class="hljs-title class_">Ce</span>.<span class="hljs-title function_">arc</span>(n.<span class="hljs-property">x</span>, n.<span class="hljs-property">y</span>, n.<span class="hljs-property">radius</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>, <span class="hljs-literal">true</span>); <span class="hljs-title class_">Ce</span>.<span class="hljs-property">fillStyle</span> = n.<span class="hljs-property">color</span>; <span class="hljs-title class_">Ce</span>.<span class="hljs-title function_">fill</span>() &#125;; <span class="hljs-keyword">return</span> n &#125; <span class="hljs-keyword">function</span> <span class="hljs-title function_">Ie</span>(<span class="hljs-params">e, t</span>) &#123; <span class="hljs-keyword">var</span> n = &#123;&#125;; n.<span class="hljs-property">x</span> = e; n.<span class="hljs-property">y</span> = t; n.<span class="hljs-property">color</span> = <span class="hljs-string">&quot;#FFF&quot;</span>; n.<span class="hljs-property">radius</span> = <span class="hljs-number">.1</span>; n.<span class="hljs-property">alpha</span> = <span class="hljs-number">.5</span>; n.<span class="hljs-property">lineWidth</span> = <span class="hljs-number">6</span>; n.<span class="hljs-property">draw</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123; <span class="hljs-title class_">Ce</span>.<span class="hljs-property">globalAlpha</span> = n.<span class="hljs-property">alpha</span>; <span class="hljs-title class_">Ce</span>.<span class="hljs-title function_">beginPath</span>(); <span class="hljs-title class_">Ce</span>.<span class="hljs-title function_">arc</span>(n.<span class="hljs-property">x</span>, n.<span class="hljs-property">y</span>, n.<span class="hljs-property">radius</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>, <span class="hljs-literal">true</span>); <span class="hljs-title class_">Ce</span>.<span class="hljs-property">lineWidth</span> = n.<span class="hljs-property">lineWidth</span>; <span class="hljs-title class_">Ce</span>.<span class="hljs-property">strokeStyle</span> = n.<span class="hljs-property">color</span>; <span class="hljs-title class_">Ce</span>.<span class="hljs-title function_">stroke</span>(); <span class="hljs-title class_">Ce</span>.<span class="hljs-property">globalAlpha</span> = <span class="hljs-number">1</span> &#125;; <span class="hljs-keyword">return</span> n &#125; <span class="hljs-keyword">function</span> <span class="hljs-title function_">He</span>(<span class="hljs-params">e</span>) &#123; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = <span class="hljs-number">0</span>; t &lt; e.<span class="hljs-property">animatables</span>.<span class="hljs-property">length</span>; t++) &#123; e.<span class="hljs-property">animatables</span>[t].<span class="hljs-property">target</span>.<span class="hljs-title function_">draw</span>() &#125; &#125; <span class="hljs-keyword">function</span> <span class="hljs-title function_">qe</span>(<span class="hljs-params">e, t</span>) &#123; <span class="hljs-keyword">var</span> n = <span class="hljs-title class_">Ie</span>(e, t); <span class="hljs-keyword">var</span> a = []; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; xe; i++) &#123; a.<span class="hljs-title function_">push</span>(<span class="hljs-title function_">je</span>(e, t)) &#125; anime.<span class="hljs-title function_">timeline</span>().<span class="hljs-title function_">add</span>(&#123; <span class="hljs-attr">targets</span>: a, <span class="hljs-attr">x</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123; <span class="hljs-keyword">return</span> e.<span class="hljs-property">endPos</span>.<span class="hljs-property">x</span> &#125;, <span class="hljs-attr">y</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123; <span class="hljs-keyword">return</span> e.<span class="hljs-property">endPos</span>.<span class="hljs-property">y</span> &#125;, <span class="hljs-attr">radius</span>: <span class="hljs-number">.1</span>, <span class="hljs-attr">duration</span>: anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">1200</span>, <span class="hljs-number">1800</span>), <span class="hljs-attr">easing</span>: <span class="hljs-string">&quot;easeOutExpo&quot;</span>, <span class="hljs-attr">update</span>: <span class="hljs-title class_">He</span> &#125;).<span class="hljs-title function_">add</span>(&#123; <span class="hljs-attr">targets</span>: n, <span class="hljs-attr">radius</span>: anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">80</span>, <span class="hljs-number">160</span>), <span class="hljs-attr">lineWidth</span>: <span class="hljs-number">0</span>, <span class="hljs-attr">alpha</span>: &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">0</span>, <span class="hljs-attr">easing</span>: <span class="hljs-string">&quot;linear&quot;</span>, <span class="hljs-attr">duration</span>: anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">600</span>, <span class="hljs-number">800</span>) &#125;, <span class="hljs-attr">duration</span>: anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">1200</span>, <span class="hljs-number">1800</span>), <span class="hljs-attr">easing</span>: <span class="hljs-string">&quot;easeOutExpo&quot;</span>, <span class="hljs-attr">update</span>: <span class="hljs-title class_">He</span> &#125;, <span class="hljs-number">0</span>) &#125; <span class="hljs-keyword">var</span> <span class="hljs-title class_">Ae</span> = <span class="hljs-title function_">anime</span>(&#123; <span class="hljs-attr">duration</span>: <span class="hljs-title class_">Infinity</span>, <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123; <span class="hljs-title class_">Ce</span>.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, we.<span class="hljs-property">width</span>, we.<span class="hljs-property">height</span>) &#125; &#125;); <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-title class_">Ee</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123; <span class="hljs-title class_">Ae</span>.<span class="hljs-title function_">play</span>(); <span class="hljs-title class_">Ne</span>(e); <span class="hljs-title function_">qe</span>(ke, <span class="hljs-title class_">Le</span>) &#125;, <span class="hljs-literal">false</span>); <span class="hljs-title class_">Me</span>(); <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;resize&quot;</span>, <span class="hljs-title class_">Me</span>, <span class="hljs-literal">false</span>); &#125;();<br></code></pre></td></tr></table></figure><p><a href="https://argvchs.netlify.app/2022/04/17/hexo-blog-3/">鼠标点击特效的参考链接-2</a>和<a href="https://blog-yunsheng.cn/2023/04/12/hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/">鼠标点击特效的参考链接-3</a>对<code>layout.ejs</code>文件新增的内容一致，为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;canvas<br>    id=<span class="hljs-string">&quot;fireworks&quot;</span><br>    style=<span class="hljs-string">&quot;position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; pointer-events: none; z-index: 32767&quot;</span><br>&gt;&lt;/canvas&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.staticfile.org/animejs/3.2.1/anime.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/custom/fireworks/fireworks.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>由此可以看出，鼠标点击展示出的效果是定义在<code>fireworks.min.js</code>文件里的，我猜，比如<code>rgba</code>定义了展示出的颜色，<a href="https://weicun581.github.io/2023/05/06/Hexo%E5%8D%9A%E5%AE%A2next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88/">鼠标点击特效的参考链接-1</a>定义的<code>fireworks.js</code>里的<code>colors</code>同理。不过，自己没有学过这方面的语法，目前也没有深究的打算。如果想<strong>自定义</strong>的话，可以从这方面下手。</p><p>按照<a href="https://argvchs.netlify.app/2022/04/17/hexo-blog-3/">鼠标点击特效的参考链接-2</a>说明的文件内容，自己实践成功了，鼠标点击特效不会被正文挡住。但是，自己还是更喜欢<a href="https://weicun581.github.io/2023/05/06/Hexo%E5%8D%9A%E5%AE%A2next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88/">鼠标点击特效的参考链接-1</a>展示出的效果，<a href="https://argvchs.netlify.app/2022/04/17/hexo-blog-3/">鼠标点击特效的参考链接-2</a>爆炸出的球球数量有点少，<a href="https://blog-yunsheng.cn/2023/04/12/hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/">鼠标点击特效的参考链接-3</a>的颜色有点淡。如上一段所说，因为不了解语法，自己没有准备深究<code>fireworks.js</code>或<code>fireworks.min.js</code>文件里的内容，也是感觉被挡住的图层问题是出现在对<code>layout.ejs</code>文件新增的三行语句上的。</p><p>最终，通过参考<a href="https://argvchs.netlify.app/2022/04/17/hexo-blog-3/">鼠标点击特效的参考链接-2</a>和<a href="https://blog-yunsheng.cn/2023/04/12/hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/">鼠标点击特效的参考链接-3</a>对<code>layout.ejs</code>文件新增的三行语句，经过自己的多次尝试，发现将<a href="https://weicun581.github.io/2023/05/06/Hexo%E5%8D%9A%E5%AE%A2next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88/">鼠标点击特效的参考链接-1</a>对<code>layout.ejs</code>文件新增的三行语句修改如下可以正常实现鼠标点击效果而不会被正文挡住了：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;canvas<br>    <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;fireworks&quot;</span><br>    style=<span class="hljs-string">&quot;position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; pointer-events: none; z-index: 32767&quot;</span><br>&gt;&lt;/canvas&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span> <br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/custom/fireworks/fireworks.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="改为本地引用"><a href="#改为本地引用" class="headerlink" title="改为本地引用"></a>改为本地引用</h3><p>可以注意到，对<code>layout.ejs</code>文件新增的三行语句的第二句中包含有一个网址，我猜应该是引用了这个网址里的内容。输入<a href="https://cdn.bootcss.com/animejs/2.2.0/anime.min.js">网址</a>进入一看，原来引用的上传到网上的<code>anime.min.js</code>的内容（内容太多，见最终结论部分，这里就不展示了）。有过前车之鉴，所以自己向来怕上传到网上的而不是保存在自己本地的东西指不定哪一天会因为什么原因而消失，到时候追悔莫及。所以，自己尝试把<code>anime.min.js</code>同样保存在<code>.\Blog\node_modules\hexo-theme-fluid\source\custom\fireworks\</code>目录下，并参考<code>layout.ejs</code>文件的第三行语句把第二行对<code>anime.min.js</code>文件网址的引用改成了对本地的引用：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;canvas<br>    <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;fireworks&quot;</span><br>    style=<span class="hljs-string">&quot;position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; pointer-events: none; z-index: 32767&quot;</span><br>&gt;&lt;/canvas&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/custom/fireworks/anime.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span> <br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/custom/fireworks/fireworks.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="Hexo注入代码-1"><a href="#Hexo注入代码-1" class="headerlink" title="Hexo注入代码"></a>Hexo注入代码</h3><p>上述通过直接在<code>layout.ejs</code>文件中新增的语句的方法直接修改了源文件，应该是尽量避免的。因此，在了解到可以通过注入代码的方法来避免修改源代码文件后，我进行了尝试，成功的实践为：</p><ol><li><p>在<code>.\Blog\node_modules\hexo-theme-fluid\source\custom\fireworks\</code>目录下，新建文件<code>fireworks.ejs</code>，文件内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ejs">&lt;canvas<br>    class=&quot;fireworks&quot;<br>    style=&quot;position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; pointer-events: none; z-index: 32767&quot;<br>&gt;&lt;/canvas&gt;<br>&lt;script type=&quot;text/javascript&quot; src=&quot;/custom/fireworks/anime.min.js&quot;&gt;&lt;/script&gt; <br>&lt;script type=&quot;text/javascript&quot; src=&quot;/custom/fireworks/fireworks.js&quot;&gt;&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>注意这里的路径是在<code>.\Blog\node_modules\hexo-theme-fluid\source\</code>下的路径。</p></li><li><p>在<code>.\Blog\scripts</code>目录下新建文件<code>fireworks.js</code>（没有<code>scripts</code>文件夹则自己新建一个就行），文件内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">filter</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;theme_inject&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">injects</span>) &#123;<br>  injects.<span class="hljs-property">bodyEnd</span>.<span class="hljs-title function_">file</span>(<span class="hljs-string">&#x27;default&#x27;</span>, <span class="hljs-string">&#x27;node_modules/hexo-theme-fluid/source/custom/fireworks/fireworks.ejs&#x27;</span>, &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;value&#x27;</span> &#125;, &#123; <span class="hljs-attr">cache</span>: <span class="hljs-literal">true</span> &#125;, -<span class="hljs-number">1</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><p>注意这里的路径是在<code>.\Blog\</code>下的路径。</p></li><li></li></ol><p>最终博客的效果是正常的。摸索的过程到这里也就告一段落了。</p><h2 id="最终结论"><a href="#最终结论" class="headerlink" title="最终结论"></a>最终结论</h2><p>实现步骤：</p><ol><li><p>在<code>.\Blog\node_modules\hexo-theme-fluid\source\custom\</code>目录下新建文件夹<code>fireworks</code>，在该文件夹内新建文件<code>fireworks.js</code>并写入以下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-meta">&quot;use strict&quot;</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">updateCoords</span>(<span class="hljs-params">e</span>)&#123;pointerX=(e.<span class="hljs-property">clientX</span>||e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientX</span>)-canvasEl.<span class="hljs-title function_">getBoundingClientRect</span>().<span class="hljs-property">left</span>,pointerY=e.<span class="hljs-property">clientY</span>||e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientY</span>-canvasEl.<span class="hljs-title function_">getBoundingClientRect</span>().<span class="hljs-property">top</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">setParticuleDirection</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,<span class="hljs-number">360</span>)*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>/<span class="hljs-number">180</span>,a=anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">50</span>,<span class="hljs-number">180</span>),n=[-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>][anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)]*a;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">x</span>:e.<span class="hljs-property">x</span>+n*<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(t),<span class="hljs-attr">y</span>:e.<span class="hljs-property">y</span>+n*<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(t)&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">createParticule</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> a=&#123;&#125;;<span class="hljs-keyword">return</span> a.<span class="hljs-property">x</span>=e,a.<span class="hljs-property">y</span>=t,a.<span class="hljs-property">color</span>=colors[anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,colors.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>)],a.<span class="hljs-property">radius</span>=anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">16</span>,<span class="hljs-number">32</span>),a.<span class="hljs-property">endPos</span>=<span class="hljs-title function_">setParticuleDirection</span>(a),a.<span class="hljs-property">draw</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;ctx.<span class="hljs-title function_">beginPath</span>(),ctx.<span class="hljs-title function_">arc</span>(a.<span class="hljs-property">x</span>,a.<span class="hljs-property">y</span>,a.<span class="hljs-property">radius</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>,!<span class="hljs-number">0</span>),ctx.<span class="hljs-property">fillStyle</span>=a.<span class="hljs-property">color</span>,ctx.<span class="hljs-title function_">fill</span>()&#125;,a&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">createCircle</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> a=&#123;&#125;;<span class="hljs-keyword">return</span> a.<span class="hljs-property">x</span>=e,a.<span class="hljs-property">y</span>=t,a.<span class="hljs-property">color</span>=<span class="hljs-string">&quot;#F00&quot;</span>,a.<span class="hljs-property">radius</span>=<span class="hljs-number">0.1</span>,a.<span class="hljs-property">alpha</span>=<span class="hljs-number">0.5</span>,a.<span class="hljs-property">lineWidth</span>=<span class="hljs-number">6</span>,a.<span class="hljs-property">draw</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;ctx.<span class="hljs-property">globalAlpha</span>=a.<span class="hljs-property">alpha</span>,ctx.<span class="hljs-title function_">beginPath</span>(),ctx.<span class="hljs-title function_">arc</span>(a.<span class="hljs-property">x</span>,a.<span class="hljs-property">y</span>,a.<span class="hljs-property">radius</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>,!<span class="hljs-number">0</span>),ctx.<span class="hljs-property">lineWidth</span>=a.<span class="hljs-property">lineWidth</span>,ctx.<span class="hljs-property">strokeStyle</span>=a.<span class="hljs-property">color</span>,ctx.<span class="hljs-title function_">stroke</span>(),ctx.<span class="hljs-property">globalAlpha</span>=<span class="hljs-number">1</span>&#125;,a&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">renderParticule</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t=<span class="hljs-number">0</span>;t&lt;e.<span class="hljs-property">animatables</span>.<span class="hljs-property">length</span>;t++)&#123;e.<span class="hljs-property">animatables</span>[t].<span class="hljs-property">target</span>.<span class="hljs-title function_">draw</span>()&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">animateParticules</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> a=<span class="hljs-title function_">createCircle</span>(e,t),n=[],i=<span class="hljs-number">0</span>;i&lt;numberOfParticules;i++)&#123;n.<span class="hljs-title function_">push</span>(<span class="hljs-title function_">createParticule</span>(e,t))&#125;anime.<span class="hljs-title function_">timeline</span>().<span class="hljs-title function_">add</span>(&#123;<span class="hljs-attr">targets</span>:n,<span class="hljs-attr">x</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">endPos</span>.<span class="hljs-property">x</span>&#125;,<span class="hljs-attr">y</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">endPos</span>.<span class="hljs-property">y</span>&#125;,<span class="hljs-attr">radius</span>:<span class="hljs-number">0.1</span>,<span class="hljs-attr">duration</span>:anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>),<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">update</span>:renderParticule&#125;).<span class="hljs-title function_">add</span>(&#123;<span class="hljs-attr">targets</span>:a,<span class="hljs-attr">radius</span>:anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">80</span>,<span class="hljs-number">160</span>),<span class="hljs-attr">lineWidth</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">alpha</span>:&#123;<span class="hljs-attr">value</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;linear&quot;</span>,<span class="hljs-attr">duration</span>:anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">600</span>,<span class="hljs-number">800</span>)&#125;,<span class="hljs-attr">duration</span>:anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>),<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">update</span>:renderParticule,<span class="hljs-attr">offset</span>:<span class="hljs-number">0</span>&#125;)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">debounce</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> a;<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-variable language_">this</span>,i=<span class="hljs-variable language_">arguments</span>;<span class="hljs-built_in">clearTimeout</span>(a),a=<span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;e.<span class="hljs-title function_">apply</span>(n,i)&#125;,t)&#125;&#125;<span class="hljs-keyword">var</span> canvasEl=<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.fireworks&quot;</span>);<span class="hljs-keyword">if</span>(canvasEl)&#123;<span class="hljs-keyword">var</span> ctx=canvasEl.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>),numberOfParticules=<span class="hljs-number">30</span>,pointerX=<span class="hljs-number">0</span>,pointerY=<span class="hljs-number">0</span>,tap=<span class="hljs-string">&quot;mousedown&quot;</span>,colors=[<span class="hljs-string">&quot;#FF1461&quot;</span>,<span class="hljs-string">&quot;#18FF92&quot;</span>,<span class="hljs-string">&quot;#5A87FF&quot;</span>,<span class="hljs-string">&quot;#FBF38C&quot;</span>],setCanvasSize=<span class="hljs-title function_">debounce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;canvasEl.<span class="hljs-property">width</span>=<span class="hljs-number">2</span>*<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>,canvasEl.<span class="hljs-property">height</span>=<span class="hljs-number">2</span>*<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>,canvasEl.<span class="hljs-property">style</span>.<span class="hljs-property">width</span>=<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>+<span class="hljs-string">&quot;px&quot;</span>,canvasEl.<span class="hljs-property">style</span>.<span class="hljs-property">height</span>=<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>+<span class="hljs-string">&quot;px&quot;</span>,canvasEl.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>).<span class="hljs-title function_">scale</span>(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)&#125;,<span class="hljs-number">500</span>),render=<span class="hljs-title function_">anime</span>(&#123;<span class="hljs-attr">duration</span>:<span class="hljs-number">1</span>/<span class="hljs-number">0</span>,<span class="hljs-attr">update</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;ctx.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,canvasEl.<span class="hljs-property">width</span>,canvasEl.<span class="hljs-property">height</span>)&#125;&#125;);<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(tap,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-string">&quot;sidebar&quot;</span>!==e.<span class="hljs-property">target</span>.<span class="hljs-property">id</span>&amp;&amp;<span class="hljs-string">&quot;toggle-sidebar&quot;</span>!==e.<span class="hljs-property">target</span>.<span class="hljs-property">id</span>&amp;&amp;<span class="hljs-string">&quot;A&quot;</span>!==e.<span class="hljs-property">target</span>.<span class="hljs-property">nodeName</span>&amp;&amp;<span class="hljs-string">&quot;IMG&quot;</span>!==e.<span class="hljs-property">target</span>.<span class="hljs-property">nodeName</span>&amp;&amp;(render.<span class="hljs-title function_">play</span>(),<span class="hljs-title function_">updateCoords</span>(e),<span class="hljs-title function_">animateParticules</span>(pointerX,pointerY))&#125;,!<span class="hljs-number">1</span>),<span class="hljs-title function_">setCanvasSize</span>(),<span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;resize&quot;</span>,setCanvasSize,!<span class="hljs-number">1</span>)&#125;<span class="hljs-string">&quot;use strict&quot;</span>;<span class="hljs-keyword">function</span> <span class="hljs-title function_">updateCoords</span>(<span class="hljs-params">e</span>)&#123;pointerX=(e.<span class="hljs-property">clientX</span>||e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientX</span>)-canvasEl.<span class="hljs-title function_">getBoundingClientRect</span>().<span class="hljs-property">left</span>,pointerY=e.<span class="hljs-property">clientY</span>||e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientY</span>-canvasEl.<span class="hljs-title function_">getBoundingClientRect</span>().<span class="hljs-property">top</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">setParticuleDirection</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> t=anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,<span class="hljs-number">360</span>)*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>/<span class="hljs-number">180</span>,a=anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">50</span>,<span class="hljs-number">180</span>),n=[-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>][anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)]*a;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">x</span>:e.<span class="hljs-property">x</span>+n*<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(t),<span class="hljs-attr">y</span>:e.<span class="hljs-property">y</span>+n*<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(t)&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">createParticule</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> a=&#123;&#125;;<span class="hljs-keyword">return</span> a.<span class="hljs-property">x</span>=e,a.<span class="hljs-property">y</span>=t,a.<span class="hljs-property">color</span>=colors[anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>,colors.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>)],a.<span class="hljs-property">radius</span>=anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">16</span>,<span class="hljs-number">32</span>),a.<span class="hljs-property">endPos</span>=<span class="hljs-title function_">setParticuleDirection</span>(a),a.<span class="hljs-property">draw</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;ctx.<span class="hljs-title function_">beginPath</span>(),ctx.<span class="hljs-title function_">arc</span>(a.<span class="hljs-property">x</span>,a.<span class="hljs-property">y</span>,a.<span class="hljs-property">radius</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>,!<span class="hljs-number">0</span>),ctx.<span class="hljs-property">fillStyle</span>=a.<span class="hljs-property">color</span>,ctx.<span class="hljs-title function_">fill</span>()&#125;,a&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">createCircle</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> a=&#123;&#125;;<span class="hljs-keyword">return</span> a.<span class="hljs-property">x</span>=e,a.<span class="hljs-property">y</span>=t,a.<span class="hljs-property">color</span>=<span class="hljs-string">&quot;#F00&quot;</span>,a.<span class="hljs-property">radius</span>=<span class="hljs-number">0.1</span>,a.<span class="hljs-property">alpha</span>=<span class="hljs-number">0.5</span>,a.<span class="hljs-property">lineWidth</span>=<span class="hljs-number">6</span>,a.<span class="hljs-property">draw</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;ctx.<span class="hljs-property">globalAlpha</span>=a.<span class="hljs-property">alpha</span>,ctx.<span class="hljs-title function_">beginPath</span>(),ctx.<span class="hljs-title function_">arc</span>(a.<span class="hljs-property">x</span>,a.<span class="hljs-property">y</span>,a.<span class="hljs-property">radius</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>,!<span class="hljs-number">0</span>),ctx.<span class="hljs-property">lineWidth</span>=a.<span class="hljs-property">lineWidth</span>,ctx.<span class="hljs-property">strokeStyle</span>=a.<span class="hljs-property">color</span>,ctx.<span class="hljs-title function_">stroke</span>(),ctx.<span class="hljs-property">globalAlpha</span>=<span class="hljs-number">1</span>&#125;,a&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">renderParticule</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t=<span class="hljs-number">0</span>;t&lt;e.<span class="hljs-property">animatables</span>.<span class="hljs-property">length</span>;t++)&#123;e.<span class="hljs-property">animatables</span>[t].<span class="hljs-property">target</span>.<span class="hljs-title function_">draw</span>()&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">animateParticules</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> a=<span class="hljs-title function_">createCircle</span>(e,t),n=[],i=<span class="hljs-number">0</span>;i&lt;numberOfParticules;i++)&#123;n.<span class="hljs-title function_">push</span>(<span class="hljs-title function_">createParticule</span>(e,t))&#125;anime.<span class="hljs-title function_">timeline</span>().<span class="hljs-title function_">add</span>(&#123;<span class="hljs-attr">targets</span>:n,<span class="hljs-attr">x</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">endPos</span>.<span class="hljs-property">x</span>&#125;,<span class="hljs-attr">y</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e.<span class="hljs-property">endPos</span>.<span class="hljs-property">y</span>&#125;,<span class="hljs-attr">radius</span>:<span class="hljs-number">0.1</span>,<span class="hljs-attr">duration</span>:anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>),<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">update</span>:renderParticule&#125;).<span class="hljs-title function_">add</span>(&#123;<span class="hljs-attr">targets</span>:a,<span class="hljs-attr">radius</span>:anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">80</span>,<span class="hljs-number">160</span>),<span class="hljs-attr">lineWidth</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">alpha</span>:&#123;<span class="hljs-attr">value</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;linear&quot;</span>,<span class="hljs-attr">duration</span>:anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">600</span>,<span class="hljs-number">800</span>)&#125;,<span class="hljs-attr">duration</span>:anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">1200</span>,<span class="hljs-number">1800</span>),<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutExpo&quot;</span>,<span class="hljs-attr">update</span>:renderParticule,<span class="hljs-attr">offset</span>:<span class="hljs-number">0</span>&#125;)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">debounce</span>(<span class="hljs-params">e,t</span>)&#123;<span class="hljs-keyword">var</span> a;<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-variable language_">this</span>,i=<span class="hljs-variable language_">arguments</span>;<span class="hljs-built_in">clearTimeout</span>(a),a=<span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;e.<span class="hljs-title function_">apply</span>(n,i)&#125;,t)&#125;&#125;<span class="hljs-keyword">var</span> canvasEl=<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.fireworks&quot;</span>);<span class="hljs-keyword">if</span>(canvasEl)&#123;<span class="hljs-keyword">var</span> ctx=canvasEl.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>),numberOfParticules=<span class="hljs-number">30</span>,pointerX=<span class="hljs-number">0</span>,pointerY=<span class="hljs-number">0</span>,tap=<span class="hljs-string">&quot;mousedown&quot;</span>,colors=[<span class="hljs-string">&quot;#FF1461&quot;</span>,<span class="hljs-string">&quot;#18FF92&quot;</span>,<span class="hljs-string">&quot;#5A87FF&quot;</span>,<span class="hljs-string">&quot;#FBF38C&quot;</span>],setCanvasSize=<span class="hljs-title function_">debounce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;canvasEl.<span class="hljs-property">width</span>=<span class="hljs-number">2</span>*<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>,canvasEl.<span class="hljs-property">height</span>=<span class="hljs-number">2</span>*<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>,canvasEl.<span class="hljs-property">style</span>.<span class="hljs-property">width</span>=<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>+<span class="hljs-string">&quot;px&quot;</span>,canvasEl.<span class="hljs-property">style</span>.<span class="hljs-property">height</span>=<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>+<span class="hljs-string">&quot;px&quot;</span>,canvasEl.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>).<span class="hljs-title function_">scale</span>(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)&#125;,<span class="hljs-number">500</span>),render=<span class="hljs-title function_">anime</span>(&#123;<span class="hljs-attr">duration</span>:<span class="hljs-number">1</span>/<span class="hljs-number">0</span>,<span class="hljs-attr">update</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;ctx.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,canvasEl.<span class="hljs-property">width</span>,canvasEl.<span class="hljs-property">height</span>)&#125;&#125;);<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(tap,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-string">&quot;sidebar&quot;</span>!==e.<span class="hljs-property">target</span>.<span class="hljs-property">id</span>&amp;&amp;<span class="hljs-string">&quot;toggle-sidebar&quot;</span>!==e.<span class="hljs-property">target</span>.<span class="hljs-property">id</span>&amp;&amp;<span class="hljs-string">&quot;A&quot;</span>!==e.<span class="hljs-property">target</span>.<span class="hljs-property">nodeName</span>&amp;&amp;<span class="hljs-string">&quot;IMG&quot;</span>!==e.<span class="hljs-property">target</span>.<span class="hljs-property">nodeName</span>&amp;&amp;(render.<span class="hljs-title function_">play</span>(),<span class="hljs-title function_">updateCoords</span>(e),<span class="hljs-title function_">animateParticules</span>(pointerX,pointerY))&#125;,!<span class="hljs-number">1</span>),<span class="hljs-title function_">setCanvasSize</span>(),<span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;resize&quot;</span>,setCanvasSize,!<span class="hljs-number">1</span>)&#125;;<br></code></pre></td></tr></table></figure></li><li><p>在这个目录下新建文件<code>anime.min.js</code>并写入以下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> 2017 Julian Garnier</span><br><span class="hljs-comment"> Released under the MIT license</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">var</span> $jscomp=&#123;<span class="hljs-attr">scope</span>:&#123;&#125;&#125;;$jscomp.<span class="hljs-property">defineProperty</span>=<span class="hljs-string">&quot;function&quot;</span>==<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Object</span>.<span class="hljs-property">defineProperties</span>?<span class="hljs-title class_">Object</span>.<span class="hljs-property">defineProperty</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">e,r,p</span>)&#123;<span class="hljs-keyword">if</span>(p.<span class="hljs-property">get</span>||p.<span class="hljs-property">set</span>)<span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">&quot;ES3 does not support getters and setters.&quot;</span>);e!=<span class="hljs-title class_">Array</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>&amp;&amp;e!=<span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>&amp;&amp;(e[r]=p.<span class="hljs-property">value</span>)&#125;;$jscomp.<span class="hljs-property">getGlobal</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;undefined&quot;</span>!=<span class="hljs-keyword">typeof</span> <span class="hljs-variable language_">window</span>&amp;&amp;<span class="hljs-variable language_">window</span>===e?<span class="hljs-attr">e</span>:<span class="hljs-string">&quot;undefined&quot;</span>!=<span class="hljs-keyword">typeof</span> <span class="hljs-variable language_">global</span>&amp;&amp;<span class="hljs-literal">null</span>!=<span class="hljs-variable language_">global</span>?<span class="hljs-attr">global</span>:e&#125;;$jscomp.<span class="hljs-property">global</span>=$jscomp.<span class="hljs-title function_">getGlobal</span>(<span class="hljs-variable language_">this</span>);$jscomp.<span class="hljs-property">SYMBOL_PREFIX</span>=<span class="hljs-string">&quot;jscomp_symbol_&quot;</span>;<br>$jscomp.<span class="hljs-property">initSymbol</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;$jscomp.<span class="hljs-property">initSymbol</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;&#125;;$jscomp.<span class="hljs-property">global</span>.<span class="hljs-property">Symbol</span>||($jscomp.<span class="hljs-property">global</span>.<span class="hljs-property">Symbol</span>=$jscomp.<span class="hljs-property">Symbol</span>)&#125;;$jscomp.<span class="hljs-property">symbolCounter_</span>=<span class="hljs-number">0</span>;$jscomp.<span class="hljs-property">Symbol</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> $jscomp.<span class="hljs-property">SYMBOL_PREFIX</span>+(e||<span class="hljs-string">&quot;&quot;</span>)+$jscomp.<span class="hljs-property">symbolCounter_</span>++&#125;;<br>$jscomp.<span class="hljs-property">initSymbolIterator</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;$jscomp.<span class="hljs-title function_">initSymbol</span>();<span class="hljs-keyword">var</span> e=$jscomp.<span class="hljs-property">global</span>.<span class="hljs-property">Symbol</span>.<span class="hljs-property">iterator</span>;e||(e=$jscomp.<span class="hljs-property">global</span>.<span class="hljs-property">Symbol</span>.<span class="hljs-property">iterator</span>=$jscomp.<span class="hljs-property">global</span>.<span class="hljs-title class_">Symbol</span>(<span class="hljs-string">&quot;iterator&quot;</span>));<span class="hljs-string">&quot;function&quot;</span>!=<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Array</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>[e]&amp;&amp;$jscomp.<span class="hljs-title function_">defineProperty</span>(<span class="hljs-title class_">Array</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>,e,&#123;<span class="hljs-attr">configurable</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">writable</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">value</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> $jscomp.<span class="hljs-title function_">arrayIterator</span>(<span class="hljs-variable language_">this</span>)&#125;&#125;);$jscomp.<span class="hljs-property">initSymbolIterator</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;&#125;&#125;;$jscomp.<span class="hljs-property">arrayIterator</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">var</span> r=<span class="hljs-number">0</span>;<span class="hljs-keyword">return</span> $jscomp.<span class="hljs-title function_">iteratorPrototype</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> r&lt;e.<span class="hljs-property">length</span>?&#123;<span class="hljs-attr">done</span>:!<span class="hljs-number">1</span>,<span class="hljs-attr">value</span>:e[r++]&#125;:&#123;<span class="hljs-attr">done</span>:!<span class="hljs-number">0</span>&#125;&#125;)&#125;;<br>$jscomp.<span class="hljs-property">iteratorPrototype</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;$jscomp.<span class="hljs-title function_">initSymbolIterator</span>();e=&#123;<span class="hljs-attr">next</span>:e&#125;;e[$jscomp.<span class="hljs-property">global</span>.<span class="hljs-property">Symbol</span>.<span class="hljs-property">iterator</span>]=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>&#125;;<span class="hljs-keyword">return</span> e&#125;;$jscomp.<span class="hljs-property">array</span>=$jscomp.<span class="hljs-property">array</span>||&#123;&#125;;$jscomp.<span class="hljs-property">iteratorFromArray</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,r</span>)&#123;$jscomp.<span class="hljs-title function_">initSymbolIterator</span>();e <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">String</span>&amp;&amp;(e+=<span class="hljs-string">&quot;&quot;</span>);<span class="hljs-keyword">var</span> p=<span class="hljs-number">0</span>,m=&#123;<span class="hljs-attr">next</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">if</span>(p&lt;e.<span class="hljs-property">length</span>)&#123;<span class="hljs-keyword">var</span> u=p++;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">value</span>:<span class="hljs-title function_">r</span>(u,e[u]),<span class="hljs-attr">done</span>:!<span class="hljs-number">1</span>&#125;&#125;m.<span class="hljs-property">next</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">done</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">value</span>:<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>&#125;&#125;;<span class="hljs-keyword">return</span> m.<span class="hljs-title function_">next</span>()&#125;&#125;;m[<span class="hljs-title class_">Symbol</span>.<span class="hljs-property">iterator</span>]=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> m&#125;;<span class="hljs-keyword">return</span> m&#125;;<br>$jscomp.<span class="hljs-property">polyfill</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">e,r,p,m</span>)&#123;<span class="hljs-keyword">if</span>(r)&#123;p=$jscomp.<span class="hljs-property">global</span>;e=e.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;.&quot;</span>);<span class="hljs-keyword">for</span>(m=<span class="hljs-number">0</span>;m&lt;e.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>;m++)&#123;<span class="hljs-keyword">var</span> u=e[m];u <span class="hljs-keyword">in</span> p||(p[u]=&#123;&#125;);p=p[u]&#125;e=e[e.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>];m=p[e];r=<span class="hljs-title function_">r</span>(m);r!=m&amp;&amp;<span class="hljs-literal">null</span>!=r&amp;&amp;$jscomp.<span class="hljs-title function_">defineProperty</span>(p,e,&#123;<span class="hljs-attr">configurable</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">writable</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">value</span>:r&#125;)&#125;&#125;;$jscomp.<span class="hljs-title function_">polyfill</span>(<span class="hljs-string">&quot;Array.prototype.keys&quot;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e?<span class="hljs-attr">e</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> $jscomp.<span class="hljs-title function_">iteratorFromArray</span>(<span class="hljs-variable language_">this</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>)&#123;<span class="hljs-keyword">return</span> e&#125;)&#125;&#125;,<span class="hljs-string">&quot;es6-impl&quot;</span>,<span class="hljs-string">&quot;es3&quot;</span>);<span class="hljs-keyword">var</span> $jscomp$this=<span class="hljs-variable language_">this</span>;<br>(<span class="hljs-keyword">function</span>(<span class="hljs-params">e,r</span>)&#123;<span class="hljs-string">&quot;function&quot;</span>===<span class="hljs-keyword">typeof</span> define&amp;&amp;define.<span class="hljs-property">amd</span>?<span class="hljs-title function_">define</span>([],r):<span class="hljs-string">&quot;object&quot;</span>===<span class="hljs-keyword">typeof</span> <span class="hljs-variable language_">module</span>&amp;&amp;<span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span>?<span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span>=<span class="hljs-title function_">r</span>():e.<span class="hljs-property">anime</span>=<span class="hljs-title function_">r</span>()&#125;)(<span class="hljs-variable language_">this</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">function</span> <span class="hljs-title function_">e</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">if</span>(!h.<span class="hljs-title function_">col</span>(a))<span class="hljs-keyword">try</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(a)&#125;<span class="hljs-keyword">catch</span>(c)&#123;&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">r</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> d=a.<span class="hljs-property">length</span>,b=<span class="hljs-number">2</span>&lt;=<span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>?<span class="hljs-variable language_">arguments</span>[<span class="hljs-number">1</span>]:<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,f=[],n=<span class="hljs-number">0</span>;n&lt;d;n++)<span class="hljs-keyword">if</span>(n <span class="hljs-keyword">in</span> a)&#123;<span class="hljs-keyword">var</span> k=a[n];c.<span class="hljs-title function_">call</span>(b,k,n,a)&amp;&amp;f.<span class="hljs-title function_">push</span>(k)&#125;<span class="hljs-keyword">return</span> f&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">p</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span> a.<span class="hljs-title function_">reduce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">a,d</span>)&#123;<span class="hljs-keyword">return</span> a.<span class="hljs-title function_">concat</span>(h.<span class="hljs-title function_">arr</span>(d)?<span class="hljs-title function_">p</span>(d):d)&#125;,[])&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">m</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">if</span>(h.<span class="hljs-title function_">arr</span>(a))<span class="hljs-keyword">return</span> a;<br>h.<span class="hljs-title function_">str</span>(a)&amp;&amp;(a=<span class="hljs-title function_">e</span>(a)||a);<span class="hljs-keyword">return</span> a <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">NodeList</span>||a <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">HTMLCollection</span>?[].<span class="hljs-property">slice</span>.<span class="hljs-title function_">call</span>(a):[a]&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">u</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">return</span> a.<span class="hljs-title function_">some</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span> a===c&#125;)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">C</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">var</span> c=&#123;&#125;,d;<span class="hljs-keyword">for</span>(d <span class="hljs-keyword">in</span> a)c[d]=a[d];<span class="hljs-keyword">return</span> c&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">D</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">var</span> d=<span class="hljs-title function_">C</span>(a),b;<span class="hljs-keyword">for</span>(b <span class="hljs-keyword">in</span> a)d[b]=c.<span class="hljs-title function_">hasOwnProperty</span>(b)?c[b]:a[b];<span class="hljs-keyword">return</span> d&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">z</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">var</span> d=<span class="hljs-title function_">C</span>(a),b;<span class="hljs-keyword">for</span>(b <span class="hljs-keyword">in</span> c)d[b]=h.<span class="hljs-title function_">und</span>(a[b])?c[b]:a[b];<span class="hljs-keyword">return</span> d&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">T</span>(<span class="hljs-params">a</span>)&#123;a=a.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/^#?([a-f\d])([a-f\d])([a-f\d])$/i</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">a,c,d,k</span>)&#123;<span class="hljs-keyword">return</span> c+c+d+d+k+k&#125;);<span class="hljs-keyword">var</span> c=<span class="hljs-regexp">/^#?([a-f\d]&#123;2&#125;)([a-f\d]&#123;2&#125;)([a-f\d]&#123;2&#125;)$/i</span>.<span class="hljs-title function_">exec</span>(a);<br>a=<span class="hljs-built_in">parseInt</span>(c[<span class="hljs-number">1</span>],<span class="hljs-number">16</span>);<span class="hljs-keyword">var</span> d=<span class="hljs-built_in">parseInt</span>(c[<span class="hljs-number">2</span>],<span class="hljs-number">16</span>),c=<span class="hljs-built_in">parseInt</span>(c[<span class="hljs-number">3</span>],<span class="hljs-number">16</span>);<span class="hljs-keyword">return</span><span class="hljs-string">&quot;rgba(&quot;</span>+a+<span class="hljs-string">&quot;,&quot;</span>+d+<span class="hljs-string">&quot;,&quot;</span>+c+<span class="hljs-string">&quot;,1)&quot;</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">U</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">function</span> <span class="hljs-title function_">c</span>(<span class="hljs-params">a,c,b</span>)&#123;<span class="hljs-number">0</span>&gt;b&amp;&amp;(b+=<span class="hljs-number">1</span>);<span class="hljs-number">1</span>&lt;b&amp;&amp;--b;<span class="hljs-keyword">return</span> b&lt;<span class="hljs-number">1</span>/<span class="hljs-number">6</span>?a+<span class="hljs-number">6</span>*(c-a)*<span class="hljs-attr">b</span>:<span class="hljs-number">.5</span>&gt;b?<span class="hljs-attr">c</span>:b&lt;<span class="hljs-number">2</span>/<span class="hljs-number">3</span>?a+(c-a)*(<span class="hljs-number">2</span>/<span class="hljs-number">3</span>-b)*<span class="hljs-number">6</span>:a&#125;<span class="hljs-keyword">var</span> d=<span class="hljs-regexp">/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g</span>.<span class="hljs-title function_">exec</span>(a)||<span class="hljs-regexp">/hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g</span>.<span class="hljs-title function_">exec</span>(a);a=<span class="hljs-built_in">parseInt</span>(d[<span class="hljs-number">1</span>])/<span class="hljs-number">360</span>;<span class="hljs-keyword">var</span> b=<span class="hljs-built_in">parseInt</span>(d[<span class="hljs-number">2</span>])/<span class="hljs-number">100</span>,f=<span class="hljs-built_in">parseInt</span>(d[<span class="hljs-number">3</span>])/<span class="hljs-number">100</span>,d=d[<span class="hljs-number">4</span>]||<span class="hljs-number">1</span>;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>==b)f=b=a=f;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">var</span> n=<span class="hljs-number">.5</span>&gt;f?f*(<span class="hljs-number">1</span>+b):f+b-f*b,k=<span class="hljs-number">2</span>*f-n,f=<span class="hljs-title function_">c</span>(k,n,a+<span class="hljs-number">1</span>/<span class="hljs-number">3</span>),b=<span class="hljs-title function_">c</span>(k,n,a);a=<span class="hljs-title function_">c</span>(k,n,a-<span class="hljs-number">1</span>/<span class="hljs-number">3</span>)&#125;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;rgba(&quot;</span>+<br><span class="hljs-number">255</span>*f+<span class="hljs-string">&quot;,&quot;</span>+<span class="hljs-number">255</span>*b+<span class="hljs-string">&quot;,&quot;</span>+<span class="hljs-number">255</span>*a+<span class="hljs-string">&quot;,&quot;</span>+d+<span class="hljs-string">&quot;)&quot;</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">y</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">if</span>(a=<span class="hljs-regexp">/([\+\-]?[0-9#\.]+)(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/</span>.<span class="hljs-title function_">exec</span>(a))<span class="hljs-keyword">return</span> a[<span class="hljs-number">2</span>]&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">V</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">if</span>(-<span class="hljs-number">1</span>&lt;a.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;translate&quot;</span>)||<span class="hljs-string">&quot;perspective&quot;</span>===a)<span class="hljs-keyword">return</span><span class="hljs-string">&quot;px&quot;</span>;<span class="hljs-keyword">if</span>(-<span class="hljs-number">1</span>&lt;a.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;rotate&quot;</span>)||-<span class="hljs-number">1</span>&lt;a.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;skew&quot;</span>))<span class="hljs-keyword">return</span><span class="hljs-string">&quot;deg&quot;</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">I</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">return</span> h.<span class="hljs-title function_">fnc</span>(a)?<span class="hljs-title function_">a</span>(c.<span class="hljs-property">target</span>,c.<span class="hljs-property">id</span>,c.<span class="hljs-property">total</span>):a&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">E</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">if</span>(c <span class="hljs-keyword">in</span> a.<span class="hljs-property">style</span>)<span class="hljs-keyword">return</span> <span class="hljs-title function_">getComputedStyle</span>(a).<span class="hljs-title function_">getPropertyValue</span>(c.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/([a-z])([A-Z])/g</span>,<span class="hljs-string">&quot;$1-$2&quot;</span>).<span class="hljs-title function_">toLowerCase</span>())||<span class="hljs-string">&quot;0&quot;</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">J</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">if</span>(h.<span class="hljs-title function_">dom</span>(a)&amp;&amp;<br><span class="hljs-title function_">u</span>(W,c))<span class="hljs-keyword">return</span><span class="hljs-string">&quot;transform&quot;</span>;<span class="hljs-keyword">if</span>(h.<span class="hljs-title function_">dom</span>(a)&amp;&amp;(a.<span class="hljs-title function_">getAttribute</span>(c)||h.<span class="hljs-title function_">svg</span>(a)&amp;&amp;a[c]))<span class="hljs-keyword">return</span><span class="hljs-string">&quot;attribute&quot;</span>;<span class="hljs-keyword">if</span>(h.<span class="hljs-title function_">dom</span>(a)&amp;&amp;<span class="hljs-string">&quot;transform&quot;</span>!==c&amp;&amp;<span class="hljs-title function_">E</span>(a,c))<span class="hljs-keyword">return</span><span class="hljs-string">&quot;css&quot;</span>;<span class="hljs-keyword">if</span>(<span class="hljs-literal">null</span>!=a[c])<span class="hljs-keyword">return</span><span class="hljs-string">&quot;object&quot;</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">X</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">var</span> d=<span class="hljs-title function_">V</span>(c),d=-<span class="hljs-number">1</span>&lt;c.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;scale&quot;</span>)?<span class="hljs-number">1</span>:<span class="hljs-number">0</span>+d;a=a.<span class="hljs-property">style</span>.<span class="hljs-property">transform</span>;<span class="hljs-keyword">if</span>(!a)<span class="hljs-keyword">return</span> d;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> b=[],f=[],n=[],k=<span class="hljs-regexp">/(\w+)\((.+?)\)/g</span>;b=k.<span class="hljs-title function_">exec</span>(a);)f.<span class="hljs-title function_">push</span>(b[<span class="hljs-number">1</span>]),n.<span class="hljs-title function_">push</span>(b[<span class="hljs-number">2</span>]);a=<span class="hljs-title function_">r</span>(n,<span class="hljs-keyword">function</span>(<span class="hljs-params">a,b</span>)&#123;<span class="hljs-keyword">return</span> f[b]===c&#125;);<span class="hljs-keyword">return</span> a.<span class="hljs-property">length</span>?a[<span class="hljs-number">0</span>]:d&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">K</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">switch</span>(<span class="hljs-title function_">J</span>(a,c))&#123;<span class="hljs-keyword">case</span> <span class="hljs-string">&quot;transform&quot;</span>:<span class="hljs-keyword">return</span> <span class="hljs-title function_">X</span>(a,c);<span class="hljs-keyword">case</span> <span class="hljs-string">&quot;css&quot;</span>:<span class="hljs-keyword">return</span> <span class="hljs-title function_">E</span>(a,c);<span class="hljs-keyword">case</span> <span class="hljs-string">&quot;attribute&quot;</span>:<span class="hljs-keyword">return</span> a.<span class="hljs-title function_">getAttribute</span>(c)&#125;<span class="hljs-keyword">return</span> a[c]||<br><span class="hljs-number">0</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">L</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">var</span> d=<span class="hljs-regexp">/^(\*=|\+=|-=)/</span>.<span class="hljs-title function_">exec</span>(a);<span class="hljs-keyword">if</span>(!d)<span class="hljs-keyword">return</span> a;<span class="hljs-keyword">var</span> b=<span class="hljs-title function_">y</span>(a)||<span class="hljs-number">0</span>;c=<span class="hljs-built_in">parseFloat</span>(c);a=<span class="hljs-built_in">parseFloat</span>(a.<span class="hljs-title function_">replace</span>(d[<span class="hljs-number">0</span>],<span class="hljs-string">&quot;&quot;</span>));<span class="hljs-keyword">switch</span>(d[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>])&#123;<span class="hljs-keyword">case</span> <span class="hljs-string">&quot;+&quot;</span>:<span class="hljs-keyword">return</span> c+a+b;<span class="hljs-keyword">case</span> <span class="hljs-string">&quot;-&quot;</span>:<span class="hljs-keyword">return</span> c-a+b;<span class="hljs-keyword">case</span> <span class="hljs-string">&quot;*&quot;</span>:<span class="hljs-keyword">return</span> c*a+b&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">F</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sqrt</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(c.<span class="hljs-property">x</span>-a.<span class="hljs-property">x</span>,<span class="hljs-number">2</span>)+<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(c.<span class="hljs-property">y</span>-a.<span class="hljs-property">y</span>,<span class="hljs-number">2</span>))&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">M</span>(<span class="hljs-params">a</span>)&#123;a=a.<span class="hljs-property">points</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> c=<span class="hljs-number">0</span>,d,b=<span class="hljs-number">0</span>;b&lt;a.<span class="hljs-property">numberOfItems</span>;b++)&#123;<span class="hljs-keyword">var</span> f=a.<span class="hljs-title function_">getItem</span>(b);<span class="hljs-number">0</span>&lt;b&amp;&amp;(c+=<span class="hljs-title function_">F</span>(d,f));d=f&#125;<span class="hljs-keyword">return</span> c&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">N</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">if</span>(a.<span class="hljs-property">getTotalLength</span>)<span class="hljs-keyword">return</span> a.<span class="hljs-title function_">getTotalLength</span>();<span class="hljs-keyword">switch</span>(a.<span class="hljs-property">tagName</span>.<span class="hljs-title function_">toLowerCase</span>())&#123;<span class="hljs-keyword">case</span> <span class="hljs-string">&quot;circle&quot;</span>:<span class="hljs-keyword">return</span> <span class="hljs-number">2</span>*<br><span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>*a.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;r&quot;</span>);<span class="hljs-keyword">case</span> <span class="hljs-string">&quot;rect&quot;</span>:<span class="hljs-keyword">return</span> <span class="hljs-number">2</span>*a.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;width&quot;</span>)+<span class="hljs-number">2</span>*a.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;height&quot;</span>);<span class="hljs-keyword">case</span> <span class="hljs-string">&quot;line&quot;</span>:<span class="hljs-keyword">return</span> <span class="hljs-title function_">F</span>(&#123;<span class="hljs-attr">x</span>:a.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;x1&quot;</span>),<span class="hljs-attr">y</span>:a.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;y1&quot;</span>)&#125;,&#123;<span class="hljs-attr">x</span>:a.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;x2&quot;</span>),<span class="hljs-attr">y</span>:a.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&quot;y2&quot;</span>)&#125;);<span class="hljs-keyword">case</span> <span class="hljs-string">&quot;polyline&quot;</span>:<span class="hljs-keyword">return</span> <span class="hljs-title function_">M</span>(a);<span class="hljs-keyword">case</span> <span class="hljs-string">&quot;polygon&quot;</span>:<span class="hljs-keyword">var</span> c=a.<span class="hljs-property">points</span>;<span class="hljs-keyword">return</span> <span class="hljs-title function_">M</span>(a)+<span class="hljs-title function_">F</span>(c.<span class="hljs-title function_">getItem</span>(c.<span class="hljs-property">numberOfItems</span>-<span class="hljs-number">1</span>),c.<span class="hljs-title function_">getItem</span>(<span class="hljs-number">0</span>))&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Y</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">function</span> <span class="hljs-title function_">d</span>(<span class="hljs-params">b</span>)&#123;b=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===b?<span class="hljs-number">0</span>:b;<span class="hljs-keyword">return</span> a.<span class="hljs-property">el</span>.<span class="hljs-title function_">getPointAtLength</span>(<span class="hljs-number">1</span>&lt;=c+b?c+<span class="hljs-attr">b</span>:<span class="hljs-number">0</span>)&#125;<span class="hljs-keyword">var</span> b=<span class="hljs-title function_">d</span>(),f=<span class="hljs-title function_">d</span>(-<span class="hljs-number">1</span>),n=<span class="hljs-title function_">d</span>(<span class="hljs-number">1</span>);<span class="hljs-keyword">switch</span>(a.<span class="hljs-property">property</span>)&#123;<span class="hljs-keyword">case</span> <span class="hljs-string">&quot;x&quot;</span>:<span class="hljs-keyword">return</span> b.<span class="hljs-property">x</span>;<span class="hljs-keyword">case</span> <span class="hljs-string">&quot;y&quot;</span>:<span class="hljs-keyword">return</span> b.<span class="hljs-property">y</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&quot;angle&quot;</span>:<span class="hljs-keyword">return</span> <span class="hljs-number">180</span>*<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">atan2</span>(n.<span class="hljs-property">y</span>-f.<span class="hljs-property">y</span>,n.<span class="hljs-property">x</span>-f.<span class="hljs-property">x</span>)/<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">O</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">var</span> d=<span class="hljs-regexp">/-?\d*\.?\d+/g</span>,b;b=h.<span class="hljs-title function_">pth</span>(a)?a.<span class="hljs-property">totalLength</span>:a;<span class="hljs-keyword">if</span>(h.<span class="hljs-title function_">col</span>(b))<span class="hljs-keyword">if</span>(h.<span class="hljs-title function_">rgb</span>(b))&#123;<span class="hljs-keyword">var</span> f=<span class="hljs-regexp">/rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g</span>.<span class="hljs-title function_">exec</span>(b);b=f?<span class="hljs-string">&quot;rgba(&quot;</span>+f[<span class="hljs-number">1</span>]+<span class="hljs-string">&quot;,1)&quot;</span>:b&#125;<span class="hljs-keyword">else</span> b=h.<span class="hljs-title function_">hex</span>(b)?<span class="hljs-title function_">T</span>(b):h.<span class="hljs-title function_">hsl</span>(b)?<span class="hljs-title function_">U</span>(b):<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>;<span class="hljs-keyword">else</span> f=(f=<span class="hljs-title function_">y</span>(b))?b.<span class="hljs-title function_">substr</span>(<span class="hljs-number">0</span>,b.<span class="hljs-property">length</span>-f.<span class="hljs-property">length</span>):b,b=c&amp;&amp;!<span class="hljs-regexp">/\s/g</span>.<span class="hljs-title function_">test</span>(b)?f+<span class="hljs-attr">c</span>:f;b+=<span class="hljs-string">&quot;&quot;</span>;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">original</span>:b,<span class="hljs-attr">numbers</span>:b.<span class="hljs-title function_">match</span>(d)?b.<span class="hljs-title function_">match</span>(d).<span class="hljs-title function_">map</span>(<span class="hljs-title class_">Number</span>):[<span class="hljs-number">0</span>],<span class="hljs-attr">strings</span>:h.<span class="hljs-title function_">str</span>(a)||c?b.<span class="hljs-title function_">split</span>(d):[]&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">P</span>(<span class="hljs-params">a</span>)&#123;a=a?<span class="hljs-title function_">p</span>(h.<span class="hljs-title function_">arr</span>(a)?a.<span class="hljs-title function_">map</span>(m):<span class="hljs-title function_">m</span>(a)):[];<span class="hljs-keyword">return</span> <span class="hljs-title function_">r</span>(a,<br><span class="hljs-keyword">function</span>(<span class="hljs-params">a,d,b</span>)&#123;<span class="hljs-keyword">return</span> b.<span class="hljs-title function_">indexOf</span>(a)===d&#125;)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">Z</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">var</span> c=<span class="hljs-title function_">P</span>(a);<span class="hljs-keyword">return</span> c.<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">a,b</span>)&#123;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">target</span>:a,<span class="hljs-attr">id</span>:b,<span class="hljs-attr">total</span>:c.<span class="hljs-property">length</span>&#125;&#125;)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">aa</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">var</span> d=<span class="hljs-title function_">C</span>(c);<span class="hljs-keyword">if</span>(h.<span class="hljs-title function_">arr</span>(a))&#123;<span class="hljs-keyword">var</span> b=a.<span class="hljs-property">length</span>;<span class="hljs-number">2</span>!==b||h.<span class="hljs-title function_">obj</span>(a[<span class="hljs-number">0</span>])?h.<span class="hljs-title function_">fnc</span>(c.<span class="hljs-property">duration</span>)||(d.<span class="hljs-property">duration</span>=c.<span class="hljs-property">duration</span>/b):a=&#123;<span class="hljs-attr">value</span>:a&#125;&#125;<span class="hljs-keyword">return</span> <span class="hljs-title function_">m</span>(a).<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">a,b</span>)&#123;b=b?<span class="hljs-number">0</span>:c.<span class="hljs-property">delay</span>;a=h.<span class="hljs-title function_">obj</span>(a)&amp;&amp;!h.<span class="hljs-title function_">pth</span>(a)?<span class="hljs-attr">a</span>:&#123;<span class="hljs-attr">value</span>:a&#125;;h.<span class="hljs-title function_">und</span>(a.<span class="hljs-property">delay</span>)&amp;&amp;(a.<span class="hljs-property">delay</span>=b);<span class="hljs-keyword">return</span> a&#125;).<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">z</span>(a,d)&#125;)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">ba</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">var</span> d=&#123;&#125;,b;<span class="hljs-keyword">for</span>(b <span class="hljs-keyword">in</span> a)&#123;<span class="hljs-keyword">var</span> f=<span class="hljs-title function_">I</span>(a[b],c);h.<span class="hljs-title function_">arr</span>(f)&amp;&amp;(f=f.<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">I</span>(a,<br>c)&#125;),<span class="hljs-number">1</span>===f.<span class="hljs-property">length</span>&amp;&amp;(f=f[<span class="hljs-number">0</span>]));d[b]=f&#125;d.<span class="hljs-property">duration</span>=<span class="hljs-built_in">parseFloat</span>(d.<span class="hljs-property">duration</span>);d.<span class="hljs-property">delay</span>=<span class="hljs-built_in">parseFloat</span>(d.<span class="hljs-property">delay</span>);<span class="hljs-keyword">return</span> d&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">ca</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span> h.<span class="hljs-title function_">arr</span>(a)?A.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>,a):Q[a]&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">da</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">var</span> d;<span class="hljs-keyword">return</span> a.<span class="hljs-property">tweens</span>.<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">b</span>)&#123;b=<span class="hljs-title function_">ba</span>(b,c);<span class="hljs-keyword">var</span> f=b.<span class="hljs-property">value</span>,e=<span class="hljs-title function_">K</span>(c.<span class="hljs-property">target</span>,a.<span class="hljs-property">name</span>),k=d?d.<span class="hljs-property">to</span>.<span class="hljs-property">original</span>:e,k=h.<span class="hljs-title function_">arr</span>(f)?f[<span class="hljs-number">0</span>]:k,w=<span class="hljs-title function_">L</span>(h.<span class="hljs-title function_">arr</span>(f)?f[<span class="hljs-number">1</span>]:f,k),e=<span class="hljs-title function_">y</span>(w)||<span class="hljs-title function_">y</span>(k)||<span class="hljs-title function_">y</span>(e);b.<span class="hljs-property">from</span>=<span class="hljs-title function_">O</span>(k,e);b.<span class="hljs-property">to</span>=<span class="hljs-title function_">O</span>(w,e);b.<span class="hljs-property">start</span>=d?d.<span class="hljs-property">end</span>:a.<span class="hljs-property">offset</span>;b.<span class="hljs-property">end</span>=b.<span class="hljs-property">start</span>+b.<span class="hljs-property">delay</span>+b.<span class="hljs-property">duration</span>;b.<span class="hljs-property">easing</span>=<span class="hljs-title function_">ca</span>(b.<span class="hljs-property">easing</span>);b.<span class="hljs-property">elasticity</span>=(<span class="hljs-number">1E3</span>-<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(b.<span class="hljs-property">elasticity</span>,<span class="hljs-number">1</span>),<span class="hljs-number">999</span>))/<br><span class="hljs-number">1E3</span>;b.<span class="hljs-property">isPath</span>=h.<span class="hljs-title function_">pth</span>(f);b.<span class="hljs-property">isColor</span>=h.<span class="hljs-title function_">col</span>(b.<span class="hljs-property">from</span>.<span class="hljs-property">original</span>);b.<span class="hljs-property">isColor</span>&amp;&amp;(b.<span class="hljs-property">round</span>=<span class="hljs-number">1</span>);<span class="hljs-keyword">return</span> d=b&#125;)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">ea</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title function_">r</span>(<span class="hljs-title function_">p</span>(a.<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span> c.<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">b</span>)&#123;<span class="hljs-keyword">var</span> c=<span class="hljs-title function_">J</span>(a.<span class="hljs-property">target</span>,b.<span class="hljs-property">name</span>);<span class="hljs-keyword">if</span>(c)&#123;<span class="hljs-keyword">var</span> d=<span class="hljs-title function_">da</span>(b,a);b=&#123;<span class="hljs-attr">type</span>:c,<span class="hljs-attr">property</span>:b.<span class="hljs-property">name</span>,<span class="hljs-attr">animatable</span>:a,<span class="hljs-attr">tweens</span>:d,<span class="hljs-attr">duration</span>:d[d.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>].<span class="hljs-property">end</span>,<span class="hljs-attr">delay</span>:d[<span class="hljs-number">0</span>].<span class="hljs-property">delay</span>&#125;&#125;<span class="hljs-keyword">else</span> b=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>;<span class="hljs-keyword">return</span> b&#125;)&#125;)),<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span>!h.<span class="hljs-title function_">und</span>(a)&#125;)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">R</span>(<span class="hljs-params">a,c,d,b</span>)&#123;<span class="hljs-keyword">var</span> f=<span class="hljs-string">&quot;delay&quot;</span>===a;<span class="hljs-keyword">return</span> c.<span class="hljs-property">length</span>?(f?<span class="hljs-title class_">Math</span>.<span class="hljs-property">min</span>:<span class="hljs-title class_">Math</span>.<span class="hljs-property">max</span>).<span class="hljs-title function_">apply</span>(<span class="hljs-title class_">Math</span>,c.<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">b</span>)&#123;<span class="hljs-keyword">return</span> b[a]&#125;)):f?b.<span class="hljs-property">delay</span>:d.<span class="hljs-property">offset</span>+b.<span class="hljs-property">delay</span>+<br>b.<span class="hljs-property">duration</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">fa</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">var</span> c=<span class="hljs-title function_">D</span>(ga,a),d=<span class="hljs-title function_">D</span>(S,a),b=<span class="hljs-title function_">Z</span>(a.<span class="hljs-property">targets</span>),f=[],e=<span class="hljs-title function_">z</span>(c,d),k;<span class="hljs-keyword">for</span>(k <span class="hljs-keyword">in</span> a)e.<span class="hljs-title function_">hasOwnProperty</span>(k)||<span class="hljs-string">&quot;targets&quot;</span>===k||f.<span class="hljs-title function_">push</span>(&#123;<span class="hljs-attr">name</span>:k,<span class="hljs-attr">offset</span>:e.<span class="hljs-property">offset</span>,<span class="hljs-attr">tweens</span>:<span class="hljs-title function_">aa</span>(a[k],d)&#125;);a=<span class="hljs-title function_">ea</span>(b,f);<span class="hljs-keyword">return</span> <span class="hljs-title function_">z</span>(c,&#123;<span class="hljs-attr">children</span>:[],<span class="hljs-attr">animatables</span>:b,<span class="hljs-attr">animations</span>:a,<span class="hljs-attr">duration</span>:<span class="hljs-title function_">R</span>(<span class="hljs-string">&quot;duration&quot;</span>,a,c,d),<span class="hljs-attr">delay</span>:<span class="hljs-title function_">R</span>(<span class="hljs-string">&quot;delay&quot;</span>,a,c,d)&#125;)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">q</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">function</span> <span class="hljs-title function_">c</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">window</span>.<span class="hljs-property">Promise</span>&amp;&amp;<span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span> p=a&#125;)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">d</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span> g.<span class="hljs-property">reversed</span>?g.<span class="hljs-property">duration</span>-<span class="hljs-attr">a</span>:a&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">b</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> b=<span class="hljs-number">0</span>,c=&#123;&#125;,d=g.<span class="hljs-property">animations</span>,f=d.<span class="hljs-property">length</span>;b&lt;f;)&#123;<span class="hljs-keyword">var</span> e=d[b],<br>k=e.<span class="hljs-property">animatable</span>,h=e.<span class="hljs-property">tweens</span>,n=h.<span class="hljs-property">length</span>-<span class="hljs-number">1</span>,l=h[n];n&amp;&amp;(l=<span class="hljs-title function_">r</span>(h,<span class="hljs-keyword">function</span>(<span class="hljs-params">b</span>)&#123;<span class="hljs-keyword">return</span> a&lt;b.<span class="hljs-property">end</span>&#125;)[<span class="hljs-number">0</span>]||l);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> h=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(a-l.<span class="hljs-property">start</span>-l.<span class="hljs-property">delay</span>,<span class="hljs-number">0</span>),l.<span class="hljs-property">duration</span>)/l.<span class="hljs-property">duration</span>,w=<span class="hljs-built_in">isNaN</span>(h)?<span class="hljs-number">1</span>:l.<span class="hljs-title function_">easing</span>(h,l.<span class="hljs-property">elasticity</span>),h=l.<span class="hljs-property">to</span>.<span class="hljs-property">strings</span>,p=l.<span class="hljs-property">round</span>,n=[],m=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,m=l.<span class="hljs-property">to</span>.<span class="hljs-property">numbers</span>.<span class="hljs-property">length</span>,t=<span class="hljs-number">0</span>;t&lt;m;t++)&#123;<span class="hljs-keyword">var</span> x=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,x=l.<span class="hljs-property">to</span>.<span class="hljs-property">numbers</span>[t],q=l.<span class="hljs-property">from</span>.<span class="hljs-property">numbers</span>[t],x=l.<span class="hljs-property">isPath</span>?<span class="hljs-title function_">Y</span>(l.<span class="hljs-property">value</span>,w*x):q+w*(x-q);p&amp;&amp;(l.<span class="hljs-property">isColor</span>&amp;&amp;<span class="hljs-number">2</span>&lt;t||(x=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(x*p)/p));n.<span class="hljs-title function_">push</span>(x)&#125;<span class="hljs-keyword">if</span>(l=h.<span class="hljs-property">length</span>)<span class="hljs-keyword">for</span>(m=h[<span class="hljs-number">0</span>],w=<span class="hljs-number">0</span>;w&lt;l;w++)p=h[w+<span class="hljs-number">1</span>],t=n[w],<span class="hljs-built_in">isNaN</span>(t)||(m=p?m+(t+p):m+(t+<span class="hljs-string">&quot; &quot;</span>));<br><span class="hljs-keyword">else</span> m=n[<span class="hljs-number">0</span>];ha[e.<span class="hljs-property">type</span>](k.<span class="hljs-property">target</span>,e.<span class="hljs-property">property</span>,m,c,k.<span class="hljs-property">id</span>);e.<span class="hljs-property">currentValue</span>=m;b++&#125;<span class="hljs-keyword">if</span>(b=<span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(c).<span class="hljs-property">length</span>)<span class="hljs-keyword">for</span>(d=<span class="hljs-number">0</span>;d&lt;b;d++)H||(H=<span class="hljs-title function_">E</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>,<span class="hljs-string">&quot;transform&quot;</span>)?<span class="hljs-string">&quot;transform&quot;</span>:<span class="hljs-string">&quot;-webkit-transform&quot;</span>),g.<span class="hljs-property">animatables</span>[d].<span class="hljs-property">target</span>.<span class="hljs-property">style</span>[H]=c[d].<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot; &quot;</span>);g.<span class="hljs-property">currentTime</span>=a;g.<span class="hljs-property">progress</span>=a/g.<span class="hljs-property">duration</span>*<span class="hljs-number">100</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">if</span>(g[a])g[a](g)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">e</span>(<span class="hljs-params"></span>)&#123;g.<span class="hljs-property">remaining</span>&amp;&amp;!<span class="hljs-number">0</span>!==g.<span class="hljs-property">remaining</span>&amp;&amp;g.<span class="hljs-property">remaining</span>--&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">k</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">var</span> k=g.<span class="hljs-property">duration</span>,n=g.<span class="hljs-property">offset</span>,w=n+g.<span class="hljs-property">delay</span>,r=g.<span class="hljs-property">currentTime</span>,x=g.<span class="hljs-property">reversed</span>,q=<span class="hljs-title function_">d</span>(a);<span class="hljs-keyword">if</span>(g.<span class="hljs-property">children</span>.<span class="hljs-property">length</span>)&#123;<span class="hljs-keyword">var</span> u=g.<span class="hljs-property">children</span>,v=u.<span class="hljs-property">length</span>;<br><span class="hljs-keyword">if</span>(q&gt;=g.<span class="hljs-property">currentTime</span>)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> G=<span class="hljs-number">0</span>;G&lt;v;G++)u[G].<span class="hljs-title function_">seek</span>(q);<span class="hljs-keyword">else</span> <span class="hljs-keyword">for</span>(;v--;)u[v].<span class="hljs-title function_">seek</span>(q)&#125;<span class="hljs-keyword">if</span>(q&gt;=w||!k)g.<span class="hljs-property">began</span>||(g.<span class="hljs-property">began</span>=!<span class="hljs-number">0</span>,<span class="hljs-title function_">f</span>(<span class="hljs-string">&quot;begin&quot;</span>)),<span class="hljs-title function_">f</span>(<span class="hljs-string">&quot;run&quot;</span>);<span class="hljs-keyword">if</span>(q&gt;n&amp;&amp;q&lt;k)<span class="hljs-title function_">b</span>(q);<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(q&lt;=n&amp;&amp;<span class="hljs-number">0</span>!==r&amp;&amp;(<span class="hljs-title function_">b</span>(<span class="hljs-number">0</span>),x&amp;&amp;<span class="hljs-title function_">e</span>()),q&gt;=k&amp;&amp;r!==k||!k)<span class="hljs-title function_">b</span>(k),x||<span class="hljs-title function_">e</span>();<span class="hljs-title function_">f</span>(<span class="hljs-string">&quot;update&quot;</span>);a&gt;=k&amp;&amp;(g.<span class="hljs-property">remaining</span>?(t=h,<span class="hljs-string">&quot;alternate&quot;</span>===g.<span class="hljs-property">direction</span>&amp;&amp;(g.<span class="hljs-property">reversed</span>=!g.<span class="hljs-property">reversed</span>)):(g.<span class="hljs-title function_">pause</span>(),g.<span class="hljs-property">completed</span>||(g.<span class="hljs-property">completed</span>=!<span class="hljs-number">0</span>,<span class="hljs-title function_">f</span>(<span class="hljs-string">&quot;complete&quot;</span>),<span class="hljs-string">&quot;Promise&quot;</span><span class="hljs-keyword">in</span> <span class="hljs-variable language_">window</span>&amp;&amp;(<span class="hljs-title function_">p</span>(),m=<span class="hljs-title function_">c</span>()))),l=<span class="hljs-number">0</span>)&#125;a=<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>===a?&#123;&#125;:a;<span class="hljs-keyword">var</span> h,t,l=<span class="hljs-number">0</span>,p=<span class="hljs-literal">null</span>,m=<span class="hljs-title function_">c</span>(),g=<span class="hljs-title function_">fa</span>(a);g.<span class="hljs-property">reset</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> a=g.<span class="hljs-property">direction</span>,c=g.<span class="hljs-property">loop</span>;g.<span class="hljs-property">currentTime</span>=<br><span class="hljs-number">0</span>;g.<span class="hljs-property">progress</span>=<span class="hljs-number">0</span>;g.<span class="hljs-property">paused</span>=!<span class="hljs-number">0</span>;g.<span class="hljs-property">began</span>=!<span class="hljs-number">1</span>;g.<span class="hljs-property">completed</span>=!<span class="hljs-number">1</span>;g.<span class="hljs-property">reversed</span>=<span class="hljs-string">&quot;reverse&quot;</span>===a;g.<span class="hljs-property">remaining</span>=<span class="hljs-string">&quot;alternate&quot;</span>===a&amp;&amp;<span class="hljs-number">1</span>===c?<span class="hljs-number">2</span>:c;<span class="hljs-title function_">b</span>(<span class="hljs-number">0</span>);<span class="hljs-keyword">for</span>(a=g.<span class="hljs-property">children</span>.<span class="hljs-property">length</span>;a--;)g.<span class="hljs-property">children</span>[a].<span class="hljs-title function_">reset</span>()&#125;;g.<span class="hljs-property">tick</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;h=a;t||(t=h);<span class="hljs-title function_">k</span>((l+h-t)*q.<span class="hljs-property">speed</span>)&#125;;g.<span class="hljs-property">seek</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-title function_">k</span>(<span class="hljs-title function_">d</span>(a))&#125;;g.<span class="hljs-property">pause</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> a=v.<span class="hljs-title function_">indexOf</span>(g);-<span class="hljs-number">1</span>&lt;a&amp;&amp;v.<span class="hljs-title function_">splice</span>(a,<span class="hljs-number">1</span>);g.<span class="hljs-property">paused</span>=!<span class="hljs-number">0</span>&#125;;g.<span class="hljs-property">play</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;g.<span class="hljs-property">paused</span>&amp;&amp;(g.<span class="hljs-property">paused</span>=!<span class="hljs-number">1</span>,t=<span class="hljs-number">0</span>,l=<span class="hljs-title function_">d</span>(g.<span class="hljs-property">currentTime</span>),v.<span class="hljs-title function_">push</span>(g),B||<span class="hljs-title function_">ia</span>())&#125;;g.<span class="hljs-property">reverse</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;g.<span class="hljs-property">reversed</span>=!g.<span class="hljs-property">reversed</span>;t=<span class="hljs-number">0</span>;l=<span class="hljs-title function_">d</span>(g.<span class="hljs-property">currentTime</span>)&#125;;g.<span class="hljs-property">restart</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;g.<span class="hljs-title function_">pause</span>();<br>g.<span class="hljs-title function_">reset</span>();g.<span class="hljs-title function_">play</span>()&#125;;g.<span class="hljs-property">finished</span>=m;g.<span class="hljs-title function_">reset</span>();g.<span class="hljs-property">autoplay</span>&amp;&amp;g.<span class="hljs-title function_">play</span>();<span class="hljs-keyword">return</span> g&#125;<span class="hljs-keyword">var</span> ga=&#123;<span class="hljs-attr">update</span>:<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,<span class="hljs-attr">begin</span>:<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,<span class="hljs-attr">run</span>:<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,<span class="hljs-attr">complete</span>:<span class="hljs-keyword">void</span> <span class="hljs-number">0</span>,<span class="hljs-attr">loop</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">direction</span>:<span class="hljs-string">&quot;normal&quot;</span>,<span class="hljs-attr">autoplay</span>:!<span class="hljs-number">0</span>,<span class="hljs-attr">offset</span>:<span class="hljs-number">0</span>&#125;,S=&#123;<span class="hljs-attr">duration</span>:<span class="hljs-number">1E3</span>,<span class="hljs-attr">delay</span>:<span class="hljs-number">0</span>,<span class="hljs-attr">easing</span>:<span class="hljs-string">&quot;easeOutElastic&quot;</span>,<span class="hljs-attr">elasticity</span>:<span class="hljs-number">500</span>,<span class="hljs-attr">round</span>:<span class="hljs-number">0</span>&#125;,W=<span class="hljs-string">&quot;translateX translateY translateZ rotate rotateX rotateY rotateZ scale scaleX scaleY scaleZ skewX skewY perspective&quot;</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot; &quot;</span>),H,h=&#123;<span class="hljs-attr">arr</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(a)&#125;,<span class="hljs-attr">obj</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span>-<span class="hljs-number">1</span>&lt;<span class="hljs-title class_">Object</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">toString</span>.<span class="hljs-title function_">call</span>(a).<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;Object&quot;</span>)&#125;,<br><span class="hljs-attr">pth</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span> h.<span class="hljs-title function_">obj</span>(a)&amp;&amp;a.<span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-string">&quot;totalLength&quot;</span>)&#125;,<span class="hljs-attr">svg</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span> a <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">SVGElement</span>&#125;,<span class="hljs-attr">dom</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span> a.<span class="hljs-property">nodeType</span>||h.<span class="hljs-title function_">svg</span>(a)&#125;,<span class="hljs-attr">str</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;string&quot;</span>===<span class="hljs-keyword">typeof</span> a&#125;,<span class="hljs-attr">fnc</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;function&quot;</span>===<span class="hljs-keyword">typeof</span> a&#125;,<span class="hljs-attr">und</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-string">&quot;undefined&quot;</span>===<span class="hljs-keyword">typeof</span> a&#125;,<span class="hljs-attr">hex</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-regexp">/(^#[0-9A-F]&#123;6&#125;$)|(^#[0-9A-F]&#123;3&#125;$)/i</span>.<span class="hljs-title function_">test</span>(a)&#125;,<span class="hljs-attr">rgb</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-regexp">/^rgb/</span>.<span class="hljs-title function_">test</span>(a)&#125;,<span class="hljs-attr">hsl</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-regexp">/^hsl/</span>.<span class="hljs-title function_">test</span>(a)&#125;,<span class="hljs-attr">col</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span> h.<span class="hljs-title function_">hex</span>(a)||h.<span class="hljs-title function_">rgb</span>(a)||h.<span class="hljs-title function_">hsl</span>(a)&#125;&#125;,A=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">function</span> <span class="hljs-title function_">a</span>(<span class="hljs-params">a,</span><br><span class="hljs-params">d,b</span>)&#123;<span class="hljs-keyword">return</span>(((<span class="hljs-number">1</span>-<span class="hljs-number">3</span>*b+<span class="hljs-number">3</span>*d)*a+(<span class="hljs-number">3</span>*b-<span class="hljs-number">6</span>*d))*a+<span class="hljs-number">3</span>*d)*a&#125;<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">c,d,b,f</span>)&#123;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>&lt;=c&amp;&amp;<span class="hljs-number">1</span>&gt;=c&amp;&amp;<span class="hljs-number">0</span>&lt;=b&amp;&amp;<span class="hljs-number">1</span>&gt;=b)&#123;<span class="hljs-keyword">var</span> e=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Float32Array</span>(<span class="hljs-number">11</span>);<span class="hljs-keyword">if</span>(c!==d||b!==f)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> k=<span class="hljs-number">0</span>;<span class="hljs-number">11</span>&gt;k;++k)e[k]=<span class="hljs-title function_">a</span>(<span class="hljs-number">.1</span>*k,c,b);<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">k</span>)&#123;<span class="hljs-keyword">if</span>(c===d&amp;&amp;b===f)<span class="hljs-keyword">return</span> k;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===k)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<span class="hljs-keyword">if</span>(<span class="hljs-number">1</span>===k)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> h=<span class="hljs-number">0</span>,l=<span class="hljs-number">1</span>;<span class="hljs-number">10</span>!==l&amp;&amp;e[l]&lt;=k;++l)h+=<span class="hljs-number">.1</span>;--l;<span class="hljs-keyword">var</span> l=h+(k-e[l])/(e[l+<span class="hljs-number">1</span>]-e[l])*<span class="hljs-number">.1</span>,n=<span class="hljs-number">3</span>*(<span class="hljs-number">1</span>-<span class="hljs-number">3</span>*b+<span class="hljs-number">3</span>*c)*l*l+<span class="hljs-number">2</span>*(<span class="hljs-number">3</span>*b-<span class="hljs-number">6</span>*c)*l+<span class="hljs-number">3</span>*c;<span class="hljs-keyword">if</span>(<span class="hljs-number">.001</span>&lt;=n)&#123;<span class="hljs-keyword">for</span>(h=<span class="hljs-number">0</span>;<span class="hljs-number">4</span>&gt;h;++h)&#123;n=<span class="hljs-number">3</span>*(<span class="hljs-number">1</span>-<span class="hljs-number">3</span>*b+<span class="hljs-number">3</span>*c)*l*l+<span class="hljs-number">2</span>*(<span class="hljs-number">3</span>*b-<span class="hljs-number">6</span>*c)*l+<span class="hljs-number">3</span>*c;<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===n)<span class="hljs-keyword">break</span>;<span class="hljs-keyword">var</span> m=<span class="hljs-title function_">a</span>(l,c,b)-k,l=l-m/n&#125;k=l&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>===<br>n)k=l;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">var</span> l=h,h=h+<span class="hljs-number">.1</span>,g=<span class="hljs-number">0</span>;<span class="hljs-keyword">do</span> m=l+(h-l)/<span class="hljs-number">2</span>,n=<span class="hljs-title function_">a</span>(m,c,b)-k,<span class="hljs-number">0</span>&lt;n?h=<span class="hljs-attr">m</span>:l=m;<span class="hljs-keyword">while</span>(<span class="hljs-number">1e-7</span>&lt;<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(n)&amp;&amp;<span class="hljs-number">10</span>&gt;++g);k=m&#125;<span class="hljs-keyword">return</span> <span class="hljs-title function_">a</span>(k,d,f)&#125;&#125;&#125;&#125;(),Q=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">function</span> <span class="hljs-title function_">a</span>(<span class="hljs-params">a,b</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>===a||<span class="hljs-number">1</span>===a?<span class="hljs-attr">a</span>:-<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">2</span>,<span class="hljs-number">10</span>*(a-<span class="hljs-number">1</span>))*<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(<span class="hljs-number">2</span>*(a-<span class="hljs-number">1</span>-b/(<span class="hljs-number">2</span>*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>)*<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">asin</span>(<span class="hljs-number">1</span>))*<span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>/b)&#125;<span class="hljs-keyword">var</span> c=<span class="hljs-string">&quot;Quad Cubic Quart Quint Sine Expo Circ Back Elastic&quot;</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot; &quot;</span>),d=&#123;<span class="hljs-title class_">In</span>:[[<span class="hljs-number">.55</span>,<span class="hljs-number">.085</span>,<span class="hljs-number">.68</span>,<span class="hljs-number">.53</span>],[<span class="hljs-number">.55</span>,<span class="hljs-number">.055</span>,<span class="hljs-number">.675</span>,<span class="hljs-number">.19</span>],[<span class="hljs-number">.895</span>,<span class="hljs-number">.03</span>,<span class="hljs-number">.685</span>,<span class="hljs-number">.22</span>],[<span class="hljs-number">.755</span>,<span class="hljs-number">.05</span>,<span class="hljs-number">.855</span>,<span class="hljs-number">.06</span>],[<span class="hljs-number">.47</span>,<span class="hljs-number">0</span>,<span class="hljs-number">.745</span>,<span class="hljs-number">.715</span>],[<span class="hljs-number">.95</span>,<span class="hljs-number">.05</span>,<span class="hljs-number">.795</span>,<span class="hljs-number">.035</span>],[<span class="hljs-number">.6</span>,<span class="hljs-number">.04</span>,<span class="hljs-number">.98</span>,<span class="hljs-number">.335</span>],[<span class="hljs-number">.6</span>,-<span class="hljs-number">.28</span>,<span class="hljs-number">.735</span>,<span class="hljs-number">.045</span>],a],<span class="hljs-title class_">Out</span>:[[<span class="hljs-number">.25</span>,<br><span class="hljs-number">.46</span>,<span class="hljs-number">.45</span>,<span class="hljs-number">.94</span>],[<span class="hljs-number">.215</span>,<span class="hljs-number">.61</span>,<span class="hljs-number">.355</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">.165</span>,<span class="hljs-number">.84</span>,<span class="hljs-number">.44</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">.23</span>,<span class="hljs-number">1</span>,<span class="hljs-number">.32</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">.39</span>,<span class="hljs-number">.575</span>,<span class="hljs-number">.565</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">.19</span>,<span class="hljs-number">1</span>,<span class="hljs-number">.22</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">.075</span>,<span class="hljs-number">.82</span>,<span class="hljs-number">.165</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">.175</span>,<span class="hljs-number">.885</span>,<span class="hljs-number">.32</span>,<span class="hljs-number">1.275</span>],<span class="hljs-keyword">function</span>(<span class="hljs-params">b,c</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>-<span class="hljs-title function_">a</span>(<span class="hljs-number">1</span>-b,c)&#125;],<span class="hljs-title class_">InOut</span>:[[<span class="hljs-number">.455</span>,<span class="hljs-number">.03</span>,<span class="hljs-number">.515</span>,<span class="hljs-number">.955</span>],[<span class="hljs-number">.645</span>,<span class="hljs-number">.045</span>,<span class="hljs-number">.355</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">.77</span>,<span class="hljs-number">0</span>,<span class="hljs-number">.175</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">.86</span>,<span class="hljs-number">0</span>,<span class="hljs-number">.07</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">.445</span>,<span class="hljs-number">.05</span>,<span class="hljs-number">.55</span>,<span class="hljs-number">.95</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">.785</span>,<span class="hljs-number">.135</span>,<span class="hljs-number">.15</span>,<span class="hljs-number">.86</span>],[<span class="hljs-number">.68</span>,-<span class="hljs-number">.55</span>,<span class="hljs-number">.265</span>,<span class="hljs-number">1.55</span>],<span class="hljs-keyword">function</span>(<span class="hljs-params">b,c</span>)&#123;<span class="hljs-keyword">return</span><span class="hljs-number">.5</span>&gt;b?<span class="hljs-title function_">a</span>(<span class="hljs-number">2</span>*b,c)/<span class="hljs-number">2</span>:<span class="hljs-number">1</span>-<span class="hljs-title function_">a</span>(-<span class="hljs-number">2</span>*b+<span class="hljs-number">2</span>,c)/<span class="hljs-number">2</span>&#125;]&#125;,b=&#123;<span class="hljs-attr">linear</span>:<span class="hljs-title function_">A</span>(<span class="hljs-number">.25</span>,<span class="hljs-number">.25</span>,<span class="hljs-number">.75</span>,<span class="hljs-number">.75</span>)&#125;,f=&#123;&#125;,e;<span class="hljs-keyword">for</span>(e <span class="hljs-keyword">in</span> d)f.<span class="hljs-property">type</span>=e,d[f.<span class="hljs-property">type</span>].<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">d,f</span>)&#123;b[<span class="hljs-string">&quot;ease&quot;</span>+a.<span class="hljs-property">type</span>+c[f]]=h.<span class="hljs-title function_">fnc</span>(d)?<br><span class="hljs-attr">d</span>:A.<span class="hljs-title function_">apply</span>($jscomp$this,d)&#125;&#125;(f)),f=&#123;<span class="hljs-attr">type</span>:f.<span class="hljs-property">type</span>&#125;;<span class="hljs-keyword">return</span> b&#125;(),ha=&#123;<span class="hljs-attr">css</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a,c,d</span>)&#123;<span class="hljs-keyword">return</span> a.<span class="hljs-property">style</span>[c]=d&#125;,<span class="hljs-attr">attribute</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a,c,d</span>)&#123;<span class="hljs-keyword">return</span> a.<span class="hljs-title function_">setAttribute</span>(c,d)&#125;,<span class="hljs-attr">object</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a,c,d</span>)&#123;<span class="hljs-keyword">return</span> a[c]=d&#125;,<span class="hljs-attr">transform</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">a,c,d,b,f</span>)&#123;b[f]||(b[f]=[]);b[f].<span class="hljs-title function_">push</span>(c+<span class="hljs-string">&quot;(&quot;</span>+d+<span class="hljs-string">&quot;)&quot;</span>)&#125;&#125;,v=[],B=<span class="hljs-number">0</span>,ia=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">function</span> <span class="hljs-title function_">a</span>(<span class="hljs-params"></span>)&#123;B=<span class="hljs-title function_">requestAnimationFrame</span>(c)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">c</span>(<span class="hljs-params">c</span>)&#123;<span class="hljs-keyword">var</span> b=v.<span class="hljs-property">length</span>;<span class="hljs-keyword">if</span>(b)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> d=<span class="hljs-number">0</span>;d&lt;b;)v[d]&amp;&amp;v[d].<span class="hljs-title function_">tick</span>(c),d++;<span class="hljs-title function_">a</span>()&#125;<span class="hljs-keyword">else</span> <span class="hljs-title function_">cancelAnimationFrame</span>(B),B=<span class="hljs-number">0</span>&#125;<span class="hljs-keyword">return</span> a&#125;();q.<span class="hljs-property">version</span>=<span class="hljs-string">&quot;2.2.0&quot;</span>;q.<span class="hljs-property">speed</span>=<span class="hljs-number">1</span>;q.<span class="hljs-property">running</span>=v;q.<span class="hljs-property">remove</span>=<br><span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;a=<span class="hljs-title function_">P</span>(a);<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> c=v.<span class="hljs-property">length</span>;c--;)<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> d=v[c],b=d.<span class="hljs-property">animations</span>,f=b.<span class="hljs-property">length</span>;f--;)<span class="hljs-title function_">u</span>(a,b[f].<span class="hljs-property">animatable</span>.<span class="hljs-property">target</span>)&amp;&amp;(b.<span class="hljs-title function_">splice</span>(f,<span class="hljs-number">1</span>),b.<span class="hljs-property">length</span>||d.<span class="hljs-title function_">pause</span>())&#125;;q.<span class="hljs-property">getValue</span>=K;q.<span class="hljs-property">path</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">var</span> d=h.<span class="hljs-title function_">str</span>(a)?<span class="hljs-title function_">e</span>(a)[<span class="hljs-number">0</span>]:a,b=c||<span class="hljs-number">100</span>;<span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">el</span>:d,<span class="hljs-attr">property</span>:a,<span class="hljs-attr">totalLength</span>:<span class="hljs-title function_">N</span>(d)*(b/<span class="hljs-number">100</span>)&#125;&#125;&#125;;q.<span class="hljs-property">setDashoffset</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">var</span> c=<span class="hljs-title function_">N</span>(a);a.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">&quot;stroke-dasharray&quot;</span>,c);<span class="hljs-keyword">return</span> c&#125;;q.<span class="hljs-property">bezier</span>=A;q.<span class="hljs-property">easings</span>=Q;q.<span class="hljs-property">timeline</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;<span class="hljs-keyword">var</span> c=<span class="hljs-title function_">q</span>(a);c.<span class="hljs-title function_">pause</span>();c.<span class="hljs-property">duration</span>=<span class="hljs-number">0</span>;c.<span class="hljs-property">add</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">d</span>)&#123;c.<span class="hljs-property">children</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">a</span>)&#123;a.<span class="hljs-property">began</span>=<br>!<span class="hljs-number">0</span>;a.<span class="hljs-property">completed</span>=!<span class="hljs-number">0</span>&#125;);<span class="hljs-title function_">m</span>(d).<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">b</span>)&#123;<span class="hljs-keyword">var</span> d=<span class="hljs-title function_">z</span>(b,<span class="hljs-title function_">D</span>(S,a||&#123;&#125;));d.<span class="hljs-property">targets</span>=d.<span class="hljs-property">targets</span>||a.<span class="hljs-property">targets</span>;b=c.<span class="hljs-property">duration</span>;<span class="hljs-keyword">var</span> e=d.<span class="hljs-property">offset</span>;d.<span class="hljs-property">autoplay</span>=!<span class="hljs-number">1</span>;d.<span class="hljs-property">direction</span>=c.<span class="hljs-property">direction</span>;d.<span class="hljs-property">offset</span>=h.<span class="hljs-title function_">und</span>(e)?<span class="hljs-attr">b</span>:<span class="hljs-title function_">L</span>(e,b);c.<span class="hljs-property">began</span>=!<span class="hljs-number">0</span>;c.<span class="hljs-property">completed</span>=!<span class="hljs-number">0</span>;c.<span class="hljs-title function_">seek</span>(d.<span class="hljs-property">offset</span>);d=<span class="hljs-title function_">q</span>(d);d.<span class="hljs-property">began</span>=!<span class="hljs-number">0</span>;d.<span class="hljs-property">completed</span>=!<span class="hljs-number">0</span>;d.<span class="hljs-property">duration</span>&gt;b&amp;&amp;(c.<span class="hljs-property">duration</span>=d.<span class="hljs-property">duration</span>);c.<span class="hljs-property">children</span>.<span class="hljs-title function_">push</span>(d)&#125;);c.<span class="hljs-title function_">seek</span>(<span class="hljs-number">0</span>);c.<span class="hljs-title function_">reset</span>();c.<span class="hljs-property">autoplay</span>&amp;&amp;c.<span class="hljs-title function_">restart</span>();<span class="hljs-keyword">return</span> c&#125;;<span class="hljs-keyword">return</span> c&#125;;q.<span class="hljs-property">random</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">a,c</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()*(c-a+<span class="hljs-number">1</span>))+a&#125;;<span class="hljs-keyword">return</span> q&#125;);<br></code></pre></td></tr></table></figure></li><li><p>在这个目录下新建文件<code>fireworks.ejs</code>并写入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ejs">&lt;canvas<br>    class=&quot;fireworks&quot;<br>    style=&quot;position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; pointer-events: none; z-index: 32767&quot;<br>&gt;&lt;/canvas&gt;<br>&lt;script type=&quot;text/javascript&quot; src=&quot;/custom/fireworks/anime.min.js&quot;&gt;&lt;/script&gt; <br>&lt;script type=&quot;text/javascript&quot; src=&quot;/custom/fireworks/fireworks.js&quot;&gt;&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>注意这里的路径是在<code>.\Blog\node_modules\hexo-theme-fluid\source\</code>下的路径。</p></li><li><p>在<code>.\Blog\scripts</code>目录下新建文件<code>fireworks.js</code>（没有<code>scripts</code>文件夹则自己新建一个就行）并写入以下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">filter</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;theme_inject&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">injects</span>) &#123;<br>  injects.<span class="hljs-property">bodyEnd</span>.<span class="hljs-title function_">file</span>(<span class="hljs-string">&#x27;default&#x27;</span>, <span class="hljs-string">&#x27;node_modules/hexo-theme-fluid/source/custom/fireworks/fireworks.ejs&#x27;</span>, &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;value&#x27;</span> &#125;, &#123; <span class="hljs-attr">cache</span>: <span class="hljs-literal">true</span> &#125;, -<span class="hljs-number">1</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><p>注意这里的路径是在<code>.\Blog\</code>下的路径。</p></li><li><p>在<code>./Blog</code>文件夹下打开<code>Git Bash</code>，输入以下命令部署博客：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><p>接着输入以下命令查看部署：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s<br></code></pre></td></tr></table></figure><p>浏览器输入 <a href="http://localhost:4000/">http://localhost:4000</a> 就可以打开新部署的网页，预览博客。过段时间后，自己的博客应该就会同步更新了。</p></li><li></li></ol><h1 id="替换Mac风格代码块"><a href="#替换Mac风格代码块" class="headerlink" title="替换Mac风格代码块"></a>替换Mac风格代码块</h1><p>根据<a href="https://blog.kevinchu.top/2023/07/17/hexo-theme-fluid-modify/#7-%E6%9B%BF%E6%8D%A2mac%E9%A3%8E%E6%A0%BC%E4%BB%A3%E7%A0%81%E5%9D%97">替换Mac风格代码块的参考链接</a>里的说明，在<code>.\Blog\node_modules\hexo-theme-fluid\source\custom</code>目录下新建文件夹<code>Markdown</code>，并在该文件夹内新建样式文件<code>macpanel.styl</code>，内容如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.highlight</span><br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#21252b</span><br>    border-radius: <span class="hljs-number">5px</span><br>    box-shadow: <span class="hljs-number">0</span> <span class="hljs-number">10px</span> <span class="hljs-number">30px</span> <span class="hljs-number">0</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">4</span>)<br>    padding-top: <span class="hljs-number">30px</span><br><br>    &amp;::before<br>      background: <span class="hljs-number">#fc625d</span><br>      border-radius: <span class="hljs-number">50%</span><br>      box-shadow: <span class="hljs-number">20px</span> <span class="hljs-number">0</span> <span class="hljs-number">#fdbc40</span>, <span class="hljs-number">40px</span> <span class="hljs-number">0</span> <span class="hljs-number">#35cd4b</span><br>      content: <span class="hljs-string">&#x27; &#x27;</span><br>      height: <span class="hljs-number">12px</span><br>      left: <span class="hljs-number">12px</span><br>      margin-top: -<span class="hljs-number">20px</span><br>      position: absolute<br>      width: <span class="hljs-number">12px</span><br></code></pre></td></tr></table></figure><p>在<code>./Blog</code>目录下修改主题配置文件<code>_config.fluid.yml</code>，找到<code>custom_css</code>配置项，引入刚刚新建的样式文件（此处引入<code>.styl</code>文件无需加后缀）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">custom_css:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/custom/Markdown/macpanel</span><br></code></pre></td></tr></table></figure><p>继续修改<code>_config.fluid.yml</code>，找到<code>code.highlightjs</code>配置项，将代码高亮风格修改暗色风格（dark系列），如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">highlightjs:</span><br>  <span class="hljs-comment"># 在链接中挑选 style 填入</span><br>  <span class="hljs-comment"># Select a style in the link</span><br>  <span class="hljs-comment"># See: https://highlightjs.org/static/demo/</span><br>  <span class="hljs-attr">style:</span> <span class="hljs-string">&quot;github dark dimmed&quot;</span><br>  <span class="hljs-attr">style_dark:</span> <span class="hljs-string">&quot;dark&quot;</span><br></code></pre></td></tr></table></figure><blockquote><p>注：如果选用其他代码高亮风格，有可能会造成代码背景是偏白色的，与黑色的Mac栏不搭。</p></blockquote><h1 id="添加看板娘"><a href="#添加看板娘" class="headerlink" title="添加看板娘"></a>添加看板娘</h1><p>此处主要参考引用了两位博主的博客：</p><p><a href="https://alec-97.github.io/posts/2499736958/">添加看板娘的参考链接-1</a></p><p><a href="https://wei-ll.github.io/2023/06/23/Butterfly%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/index.html">添加看板娘的参考链接-2</a></p><h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><ol><li><p>官方有提供live2d，这里想配置加强版看板娘，需先卸载原始live2d：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm uninstall hexo-helper-live2d<br></code></pre></td></tr></table></figure></li><li><p>在<code>.\Blog\node_modules\hexo-theme-fluid\source\custom</code>目录下新建文件夹<code>live2d</code>。下载 <a href="https://github.com/stevenjoezhang/live2d-widget">张书樵大神的项目</a>并解压到该目录，修改项目文件夹名为 <code>live2d-widget</code>。</p></li><li><p>在博客根目录<code>.\Blog</code>下的主题配置文件<code>_config.fluid.yml</code>中的<code>custom_js</code>和<code>custom_css</code>中加入：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">custom_js:</span><br>  <span class="hljs-comment"># live2d的js文件（2）</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/custom/live2d/live2d-widget/autoload.js</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">//cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js</span><br>  <span class="hljs-comment"># - /custom/live2d/jquery.min.js</span><br><br><span class="hljs-attr">custom_css:</span><br>  <span class="hljs-comment"># live2d的css文件（1）</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">//cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css</span><br>  <span class="hljs-comment"># - /custom/live2d/font-awesome.min.css</span><br></code></pre></td></tr></table></figure><p>其中的两个<code>cdn</code>链接可以将依赖文件下载到本地然后引入：</p><ol><li><p>在<code>.\Blog\node_modules\hexo-theme-fluid\source\custom\live2d</code>目录下新建文件<code>jquery.min.js</code>并复制进<a href="https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js">jquery.min.js的cdn链接</a>的内容（字符太多，Typora竟然卡死了，这里就不展示了）。</p></li><li><p>在<code>.\Blog\node_modules\hexo-theme-fluid\source\custom\live2d</code>目录下新建文件<code>font-awesome.min.css</code>并复制进<a href="https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css">font-awesome.min.css的cdn链接</a>的内容。</p></li><li><p>在博客根目录<code>.\Blog</code>下的主题配置文件<code>_config.fluid.yml</code>中的<code>custom_js</code>和<code>custom_css</code>中加入：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">custom_js:</span><br>  <span class="hljs-comment"># live2d的js文件（2）</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/custom/live2d/live2d-widget/autoload.js</span><br>  <span class="hljs-comment"># - //cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/custom/live2d/jquery.min.js</span><br><br><span class="hljs-attr">custom_css:</span><br>  <span class="hljs-comment"># live2d的css文件（1）</span><br>  <span class="hljs-comment"># - //cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/custom/live2d/font-awesome.min.css</span><br></code></pre></td></tr></table></figure></li><li></li></ol></li><li><p>修改<code>live2d-widget</code>文件夹中的 <code>autoload.js</code> 文件，将：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> live2d_path = <span class="hljs-string">&quot;https://fastly.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/&quot;</span>;<br></code></pre></td></tr></table></figure><p>改为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> live2d_path = <span class="hljs-string">&#x27;/custom/live2d/live2d-widget/&#x27;</span>;<br></code></pre></td></tr></table></figure></li><li><p>对于<a href="https://github.com/jerryc127/hexo-theme-butterfly">Hexo Butterfly</a>主题，<a href="https://wei-ll.github.io/2023/06/23/Butterfly%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/index.html">添加看板娘的参考链接-2</a>中有提到：打开butterfly主题目录下的<code>\layout\includes</code>目录，点击修改<code>head.pug</code>文件，在文件末尾粘贴：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pug">script(src=&#x27;/custom/live2d/live2d-widget/autoload.js&#x27;)<br></code></pre></td></tr></table></figure><p>对于<a href="https://hexo.fluid-dev.com/docs/">Hexo Fluid</a>主题没有这一步骤（因为没有找到这个目录和文件）。不用担心，没有发现<a href="https://hexo.fluid-dev.com/docs/">Hexo Fluid</a>主题一缺失这一步会影响到最终效果。</p></li><li><p>指定看板娘API的库。以下两种方法均可：</p><ol><li><p>引用网上链接。修改 <code>autoload.js</code> 文件，在<code>initWidget</code>函数中，注释掉<code>apiPath</code>（原api地址已不可用）并修改<code>cdnPath</code>，原作者的cdn地址不能换装，可以用<a href="https://akilar.top/posts/5b8f515f/">Live2d Widget | Akilarの糖果屋</a>中的cdn地址（可换装且模型比较多，<a href="https://github.com/yzs020220/live2d_api">添加看板娘的参考链接-1的博主的live2d_api</a>也是在此基础上改的）。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 三个cdnPath选一个，分别是原作者，Akilar站长，添加看板娘的参考链接-1的博主的</span><br><span class="hljs-attr">cdnPath</span>: <span class="hljs-string">&quot;https://fastly.jsdelivr.net/gh/fghrsh/live2d_api/&quot;</span>,<br><span class="hljs-attr">cdnPath</span>: <span class="hljs-string">&quot;https://npm.elemecdn.com/akilar-live2dapi@latest/&quot;</span>,<br><span class="hljs-attr">cdnPath</span>: <span class="hljs-string">&quot;https://gcore.jsdelivr.net/npm/yzs-live2d_src@1.1.0/&quot;</span>,<br></code></pre></td></tr></table></figure></li><li><p>这里也可以引用本地文件。将<code>live2d_api</code>放在博客的原网站下(反正免费的CDN加速在国内基本上不得行，基本上需要梯子，所以直接在网站内访问的速度也可以，如果有条件用gitee也可以直接用gitee，不过注意在tips下删掉一些句子)。我选择使用<a href="https://github.com/yzs020220/live2d_api">添加看板娘的参考链接-1的博主的live2d_api</a>，具体操作如下：</p><ol><li><p>下载 <a href="https://github.com/yzs020220/live2d_api">添加看板娘的参考链接-1的博主的live2d_api</a>并解压到<code>.\Blog\node_modules\hexo-theme-fluid\source\custom\live2d</code>目录，修改项目文件夹名为 <code>live2d_api</code>。</p></li><li><p>在<code>live2d-widget</code>文件夹中的 <code>autoload.js</code> 文件中添加对应的<code>cdnPath</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">cdnPath</span>: <span class="hljs-string">&quot;/custom/live2d/live2d_api/&quot;</span>,<br></code></pre></td></tr></table></figure></li><li></li></ol></li><li></li></ol></li><li><p>在博客根目录<code>.\Blog</code>下的主题配置文件<code>_config.fluid.yml</code>中新增语句：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 看板娘</span><br><span class="hljs-attr">live2d:</span>  <br><span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure></li><li><p>完成！</p></li></ol><h2 id="自定义配置"><a href="#自定义配置" class="headerlink" title="自定义配置"></a>自定义配置</h2><ol><li><p>在<code>live2d-widget</code>文件夹中，可进行的操作：</p><ol><li><p>想修改看板娘大小、位置、格式、文本内容等，可查看并修改 <code>waifu-tips.js</code> 、 <code>waifu-tips.json</code> 和 <code>waifu.css</code>。</p><ol><li><p>修改首次加载的模型。修改<code>live2d-widget\src\index.js</code>文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js">(<span class="hljs-keyword">function</span> <span class="hljs-title function_">initModel</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">let</span> modelId = <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;modelId&quot;</span>),<br>        modelTexturesId = <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;modelTexturesId&quot;</span>);<br>    <span class="hljs-keyword">if</span> (modelId === <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-comment">// 首次访问加载 指定模型 的 指定材质</span><br>        modelId = <span class="hljs-number">3</span>; <span class="hljs-comment">// 模型 ID</span><br>        modelTexturesId = <span class="hljs-number">53</span>; <span class="hljs-comment">// 材质 ID</span><br>    &#125;<br></code></pre></td></tr></table></figure></li><li><p>在<code>live2d-widget\waifu-tips.css</code>文件中：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 修改看板娘的位置：其中人物距离底部的位置margin-bottom */</span><br><span class="hljs-selector-id">#waifu</span> &#123;<br>   <span class="hljs-attribute">bottom</span>: -<span class="hljs-number">1000px</span>;<br>   <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>   <span class="hljs-attribute">line-height</span>: <span class="hljs-number">0</span>;<br>   <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">10px</span>;<br>   <span class="hljs-attribute">position</span>: fixed;<br>   <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">3px</span>);<br>   <span class="hljs-attribute">transition</span>: transform .<span class="hljs-number">3s</span> ease-in-out, bottom <span class="hljs-number">3s</span> ease-in-out;<br>   <span class="hljs-attribute">z-index</span>: <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-comment">/* 人物大小 */</span><br><span class="hljs-selector-id">#live2d</span> &#123;<br>   <span class="hljs-attribute">cursor</span>: grab;<br>   <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;<br>   <span class="hljs-attribute">position</span>: relative;<br>   <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>&#125;<br><span class="hljs-comment">/* 按钮位置 */</span><br><span class="hljs-selector-id">#waifu-tool</span> &#123;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#aaa</span>;<br><span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br><span class="hljs-attribute">position</span>: absolute;<br><span class="hljs-attribute">right</span>: <span class="hljs-number">10px</span>;<br><span class="hljs-attribute">top</span>: <span class="hljs-number">20px</span>;<br><span class="hljs-attribute">transition</span>: opacity <span class="hljs-number">1s</span>;<br>&#125;<br><span class="hljs-comment">/* 按钮间距 */</span><br><span class="hljs-selector-id">#waifu-tool</span> <span class="hljs-selector-tag">span</span> &#123;<br>   <span class="hljs-attribute">display</span>: block;<br>   <span class="hljs-attribute">height</span>: <span class="hljs-number">25px</span>;<br>   <span class="hljs-attribute">text-align</span>: center;<br>&#125;<br><span class="hljs-comment">/* 按钮大小 */</span><br><span class="hljs-selector-id">#waifu-tool</span> svg &#123;<br>   fill: <span class="hljs-number">#7b8c9d</span>;<br>   <span class="hljs-attribute">cursor</span>: pointer;<br>   <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;<br>   <span class="hljs-attribute">transition</span>: fill .<span class="hljs-number">3s</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li></li></ol></li><li><p>如果被挡住的话是因为在插件的<code>z-index</code>默认为-1(修改为999就是最顶层，值越大所在的图层就越高)，在<code>waifu.css</code>文件中修改即可，调整插件大小也是在这个文件中，修改对应部分的<code>width</code>和<code>height</code>即可：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#waifu</span> &#123;<br>    <span class="hljs-attribute">z-index</span>: <span class="hljs-number">999</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li></li></ol></li><li><p>在<code>live2d_api</code>文件夹下，可进行的操作有：</p><ol><li><p>删除模型：</p><ol><li>在<code>model_list.json</code>中删除对应的<code>models</code>名称，<code>messages</code>对应的是更换看板娘时看板娘会说的话(跟<code>models</code>的顺序对应)。</li><li>在<code>model</code>文件夹中删除对应名称的文件夹。</li></ol></li><li><p>增加模型。</p><blockquote><ul><li><p>由于live2d_widget仅支持Cubism2.1，虽然issues上有<a href="https://github.com/stevenjoezhang/live2d-widget/pull/82">兼容目前所有live2d格式的issues</a>，但我目前没有尝试过（比较麻烦，暂时不想加新的模型，就这样吧）。</p></li><li><p>如果只使用Cubism2.1，我个人推荐去看看<a href="https://github.com/xiazeyu/live2d-widget-models">xiazeyu&#x2F;live2d-widget-models</a>和<a href="https://github.com/xiaoski/live2d_models_collection">xiaoski&#x2F;live2d_models_collection</a>，收录的不少而且都是可用的，在网上找的话Cubism2.1的模型已经不多了。</p></li></ul></blockquote><ol><li>在将上面两个项目中通过git clone或npm install后，把对应的模型文件夹拉到<code>model</code>文件夹下。</li><li>修改模型文件夹中的那个指定各个文件路径的json文件为<code>index.json</code>，一般这个文件叫<code>name.model.json</code>，一般来说修改到这个步骤的模型文件就已经可用了。</li><li>在<code>model_list.json</code>文件中的<code>models</code>中添加对应的文件夹名字并添加对应的<code>messages</code>即可。</li></ol></li><li><p>修改模型的大小与位置。由于一般拿到的模型可能大小不对，所以也给出了模型的位置及大小的方法：</p><ol><li><p>打开需要修改的模型的文件夹中的<code>name.model.json</code>文件，添加或修改<code>layout</code>部分：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;layout&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;center_x&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// 模型中心对应的横坐标，默认为0</span><br>        <span class="hljs-attr">&quot;center_y&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">-0.2</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// 模型中心对应的纵坐标，默认为0</span><br>        <span class="hljs-attr">&quot;width&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1.5</span> <span class="hljs-comment">// 模型的大小，默认为2</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br></code></pre></td></tr></table></figure><p>调整到自己需要的比例还挺麻烦的，上面的参数是<a href="https://github.com/xiaoski/live2d_models_collection">xiaoski&#x2F;live2d_models_collection</a>中我调整康娜缩放及位置的参数，应该其他的模型也基本可用（我没试过）。</p></li><li></li></ol></li><li></li></ol></li><li></li></ol><h1 id="浏览器标签恶搞"><a href="#浏览器标签恶搞" class="headerlink" title="浏览器标签恶搞"></a>浏览器标签恶搞</h1><p>根据<a href="https://asteri5m.gitee.io/archives/Fluid%E9%AD%94%E6%94%B9%E7%AC%94%E8%AE%B0.html#0x13-%E6%A0%87%E7%AD%BE%E6%81%B6%E6%90%9E">浏览器标签恶搞的参考链接</a>里的说明，在<code>.\Blog\node_modules\hexo-theme-fluid\source\custom</code>目录下新建文件夹<code>LabelPage</code>，并在该文件夹内新建文件<code>LabelPage.js</code>，内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 浏览器搞笑标题</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">OriginTitle</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span>;<br><span class="hljs-keyword">var</span> titleTime;<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;visibilitychange&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-property">hidden</span>) &#123;<br>$(<span class="hljs-string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;href&#x27;</span>, <span class="hljs-string">&quot;/funny.ico&quot;</span>);<br><span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&#x27;╭(°A°`)╮ 人生若只如初见&#x27;</span>;<br><span class="hljs-built_in">clearTimeout</span>(titleTime);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>$(<span class="hljs-string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;href&#x27;</span>, <span class="hljs-string">&quot;/img/newtubiao.png&quot;</span>);<br><span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&#x27;(ฅ&gt;ω&lt;*ฅ)  既见君子 云胡不喜&#x27;</span>;<br>titleTime = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-title class_">OriginTitle</span>;<br>&#125;, <span class="hljs-number">2000</span>);<br>&#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p>在<code>./Blog</code>目录下修改主题配置文件<code>_config.fluid.yml</code>，找到<code>custom_css</code>配置项，引入刚刚新建的文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">custom_css:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/custom/LabelPage/LabelPage.js</span><br></code></pre></td></tr></table></figure><h1 id="自定义字体"><a href="#自定义字体" class="headerlink" title="自定义字体"></a>自定义字体</h1><p>本博客选择了全局使用思源宋体，下面介绍方法。</p><h2 id="引入网络上托管的字体"><a href="#引入网络上托管的字体" class="headerlink" title="引入网络上托管的字体"></a>引入网络上托管的字体</h2><ol><li><p>获取字体链接。</p><img src="/posts/3edad46f/%E8%8E%B7%E5%8F%96%E5%AD%97%E4%BD%93%E9%93%BE%E6%8E%A5.png" class="" title="获取字体链接"><ol><li><p>根据<a href="https://www.erenship.com/posts/40222.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%97%E4%BD%93">引入网络上托管的字体的参考链接-1</a>的说明，打开 <a href="https://fonts.google.com/">Google Fonts</a>。</p></li><li><p>搜索思源宋体的英文名：<code>Noto Serif SC</code>。</p></li><li><p>在列表中选择个人觉得合适的字体样式后，注意此处可根据自己需要选择多个样式。</p></li><li><p>点击右上角的购物袋图标 <code>View selected families</code>。</p></li><li><p>获得<code>link</code>链接。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;link href=<span class="hljs-string">&quot;https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@200;300;400;500;600;700;900&amp;display=swap&quot;</span> rel=<span class="hljs-string">&quot;stylesheet&quot;</span>&gt;<br></code></pre></td></tr></table></figure></li><li></li></ol></li><li><p>引入字体链接。</p><ol><li><p>根据<a href="https://zhul.in/2023/11/28/use-lxgw-wenkai-in-hexo-fluid/">引入网络上托管的字体的参考链接-2</a>的说明，在<code>./Blog/scripts/</code>文件夹中新建文件<code>font.js</code>并写入以下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">injector</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;head_end&#x27;</span>, <span class="hljs-string">&#x27;&lt;link href=&quot;https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@200;300;400;500;600;700;900&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#x27;</span>, <span class="hljs-string">&#x27;default&#x27;</span>);<br></code></pre></td></tr></table></figure><blockquote><p>有的主题可能提供了类似<a href="https://hexo.fluid-dev.com/docs/">Hexo Fluid</a>主题在<code>./Blog/_config.fluid.yml</code>中指定自定义<code>.js/.css</code>文件路径的功能，可以直接自定义 <code>&lt;head&gt;</code> 节点中的 HTML 内容，例如变量<code>custom_head</code>。如果有这样的话，直接把字体的<code>link</code>链接添加过来应该也可以。</p></blockquote></li><li></li></ol></li><li><p>指定博客的字体。</p><ol><li><p>在<code>./Blog</code>根目录下打开文件<code>_config.fluid.yml</code>，找到一个名为 <code>font-family</code> 的配置项，加入自定义字体的名称：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># 主题字体配置</span><br><span class="hljs-comment"># Font</span><br><span class="hljs-attr">font:</span><br>  <span class="hljs-attr">font_size:</span> <span class="hljs-string">18px</span><br>  <span class="hljs-attr">font_family:</span> <span class="hljs-string">&quot;Noto Serif SC&quot;</span><br>  <span class="hljs-attr">letter_spacing:</span> <span class="hljs-number">0.</span><span class="hljs-string">02em</span><br>  <span class="hljs-attr">code_font_size:</span> <span class="hljs-number">100</span><span class="hljs-string">%</span><br></code></pre></td></tr></table></figure><blockquote><p>此处指定字体的位置适用于<a href="https://hexo.fluid-dev.com/docs/">Hexo Fluid</a>主题，其它主题可能需要自行找到指定字体的地方。比如将字体英文名称添加到 <code>\yourtheme\source\css\_variables\</code> 目录下的 <code>base.styl</code> 文件中，具体位置为 <code>font-family:</code> </p></blockquote></li><li><p>到这一步，部署后预览博客，可以博客中除文章里代码块的字体没有被替换后，其它地方都已经替换成功了。</p></li></ol></li><li><p>指定代码块的字体。</p><ol><li><p>根据<a href="https://github.com/fluid-dev/hexo-theme-fluid/issues/536">如何修改md中代码块的字体？</a>里提供的解决方案，在<code>.\Blog\node_modules\hexo-theme-fluid\source\custom\Markdown</code>文件夹下新建文件<code>CodeFont.css</code>并写入以下内容：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.markdown-body</span> <span class="hljs-selector-tag">code</span>, <span class="hljs-selector-class">.markdown-body</span> pre &#123;<br>    <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&quot;Noto Serif SC&quot;</span>,monospace <span class="hljs-meta">!important</span>;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">100%</span> <span class="hljs-meta">!important</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>注：这里的<code>custom</code>及其子文件夹为自己新建的文件夹。</p></li><li><p>在<code>./Blog</code>根目录下打开文件<code>_config.fluid.yml</code>，找到一个名为 <code>custom_css</code> 的配置项，加入刚才自定义文件的路径：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">custom_css:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/custom/Markdown/CodeFont.css</span><br></code></pre></td></tr></table></figure></li><li></li></ol></li><li><p>大功告成。</p></li></ol><h2 id="引入本地字体"><a href="#引入本地字体" class="headerlink" title="引入本地字体"></a>引入本地字体</h2><p>根据<a href="https://largesse.netlify.app/posts/3c2a5351.html">引入本地字体的参考链接</a>及其它一些博客的说明，我进行了尝试，但没有成功。心累，暂且放下。</p><h2 id="分别指定中英文字体"><a href="#分别指定中英文字体" class="headerlink" title="分别指定中英文字体"></a>分别指定中英文字体</h2><p>如果想要自己的博客中分别指定中英文字体，经过自己的尝试，前期获取和引入字体的方法与上文一致，类推即可。只是在指定博客的字体时，需要使用的格式略有不同。</p><p>在<code>./Blog</code>根目录下打开文件<code>_config.fluid.yml</code>，找到一个名为 <code>font-family</code> 的配置项，加入自定义字体的名称：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># 主题字体配置</span><br><span class="hljs-comment"># Font</span><br><span class="hljs-attr">font:</span><br>  <span class="hljs-attr">font_size:</span> <span class="hljs-string">18px</span><br>  <span class="hljs-attr">font_family:</span> <span class="hljs-string">&quot;&#x27;JetBrains Mono&#x27;, &#x27;Noto Serif SC&#x27;&quot;</span><br>  <span class="hljs-attr">letter_spacing:</span> <span class="hljs-number">0.</span><span class="hljs-string">02em</span><br>  <span class="hljs-attr">code_font_size:</span> <span class="hljs-number">100</span><span class="hljs-string">%</span><br></code></pre></td></tr></table></figure><p>这里指定的英文字体时<code>JetBrains Mono</code>，中文字体是<code>Noto Serif SC</code>，也就是思源宋体。注意：</p><ol><li>指定的英文字体须在中文字体之前，这是由字体的引用顺序决定的，即排在前面的指定的字体没有适用于该字符的字体时，才会尝试使用后面的指定的字体。</li><li>指定格式是<code>&quot;&#39;JetBrains Mono&#39;, &#39;Noto Serif SC&#39;&quot;</code>。<code>&quot;JetBrains Mono&quot;, &quot;Noto Serif SC&quot;</code>这样会报错的。</li></ol><p>自己本想分别设置博客英文字体为<code>JetBrains Mono</code>，中文字体为<code>Noto Serif SC</code>，但是最后发现整体效果没有只使用<code>Noto Serif SC</code>美观。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>建站中……</title>
    <link href="/posts/a95c3b18/"/>
    <url>/posts/a95c3b18/</url>
    
    <content type="html"><![CDATA[<p>欢迎光临，敬请期待。</p><span id="more"></span><p>字体测试</p><p>0Oo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">0Oo<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/posts/4a17b156/"/>
    <url>/posts/4a17b156/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
